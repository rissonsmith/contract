{
	"id": "9d27a1989abc563e7b89975cb69f2386",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"GobinGelt.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// File: @openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.22;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.22;\r\n\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: @openzeppelin/contracts@5.1.0/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.22;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.22;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\n// File: @openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.22;\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC-20\r\n * applications.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\r\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     *\r\n     * ```solidity\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@5.1.0/access/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.22;\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: GoblinGelt.sol\r\n\r\n\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\n\r\n\r\n/// @custom:security-contact risson@goblingelt.com\r\ncontract GoblinGelt is ERC20, Ownable {\r\n    constructor(address initialOwner)\r\n        ERC20(\"Goblin Gelt\", \"GELT\")\r\n        Ownable(initialOwner)\r\n    {\r\n        _mint(msg.sender, 21000000 * 10 ** decimals());\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"GobinGelt.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "GobinGelt.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "GobinGelt.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "GobinGelt.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "GobinGelt.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "GobinGelt.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GoblinGelt": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "risson@goblingelt.com",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GobinGelt.sol\":25796:26120  contract GoblinGelt is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"GobinGelt.sol\":25841:26014  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GobinGelt.sol\":25930:25942  initialOwner */\n  dup1\n    /* \"GobinGelt.sol\":12882:12998  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xaa, 0x11dbd89b1a5b8811d95b1d)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x11d15315)\n  dup2\n  mstore\n  pop\n    /* \"GobinGelt.sol\":12957:12962  name_ */\n  dup2\n    /* \"GobinGelt.sol\":12949:12954  _name */\n  0x03\n    /* \"GobinGelt.sol\":12949:12962  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"GobinGelt.sol\":12973:12980  _symbol */\n  0x04\n    /* \"GobinGelt.sol\":12973:12990  _symbol = symbol_ */\n  tag_10\n    /* \"GobinGelt.sol\":12983:12990  symbol_ */\n  dup3\n    /* \"GobinGelt.sol\":12973:12980  _symbol */\n  dup3\n    /* \"GobinGelt.sol\":12973:12990  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":23740:23766  initialOwner == address(0) */\n  dup2\n  and\n    /* \"GobinGelt.sol\":23736:23833  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"GobinGelt.sol\":23790:23821  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"GobinGelt.sol\":23818:23819  0 */\n  0x00\n    /* \"GobinGelt.sol\":23790:23821  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3142:3193   */\n  mstore\n    /* \"#utility.yul\":3115:3133   */\n  0x24\n  add\n    /* \"GobinGelt.sol\":23790:23821  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"GobinGelt.sol\":23736:23833  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"GobinGelt.sol\":23843:23875  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"GobinGelt.sol\":23862:23874  initialOwner */\n  dup2\n    /* \"GobinGelt.sol\":23843:23861  _transferOwnership */\n  tag_16\n    /* \"GobinGelt.sol\":23843:23875  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"GobinGelt.sol\":25960:26006  _mint(msg.sender, 21000000 * 10 ** decimals()) */\n  tag_18\n    /* \"GobinGelt.sol\":25966:25976  msg.sender */\n  caller\n    /* \"GobinGelt.sol\":25989:26005  10 ** decimals() */\n  tag_21\n    /* \"GobinGelt.sol\":14095:14097  18 */\n  0x12\n    /* \"GobinGelt.sol\":25989:25991  10 */\n  0x0a\n    /* \"GobinGelt.sol\":25989:26005  10 ** decimals() */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"GobinGelt.sol\":25978:26005  21000000 * 10 ** decimals() */\n  tag_23\n  swap1\n    /* \"GobinGelt.sol\":25978:25986  21000000 */\n  0x01406f40\n    /* \"GobinGelt.sol\":25978:26005  21000000 * 10 ** decimals() */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"GobinGelt.sol\":25960:25965  _mint */\n  tag_25\n    /* \"GobinGelt.sol\":25960:26006  _mint(msg.sender, 21000000 * 10 ** decimals()) */\n  jump\t// in\ntag_18:\n    /* \"GobinGelt.sol\":25841:26014  constructor(address initialOwner)... */\n  pop\n    /* \"GobinGelt.sol\":25796:26120  contract GoblinGelt is ERC20, Ownable {... */\n  jump(tag_54)\n    /* \"GobinGelt.sol\":25435:25626  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"GobinGelt.sol\":25528:25534  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":25545:25562  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"GobinGelt.sol\":25578:25618  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"GobinGelt.sol\":25528:25534  _owner */\n  swap2\n  and\n  swap2\n    /* \"GobinGelt.sol\":25545:25562  _owner = newOwner */\n  swap1\n    /* \"GobinGelt.sol\":25528:25534  _owner */\n  dup3\n  swap1\n    /* \"GobinGelt.sol\":25578:25618  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"GobinGelt.sol\":25509:25525  address oldOwner */\n  0x00\n  swap1\n    /* \"GobinGelt.sol\":25578:25618  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"GobinGelt.sol\":25498:25626  {... */\n  pop\n    /* \"GobinGelt.sol\":25435:25626  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"GobinGelt.sol\":18915:19128  function _mint(address account, uint256 value) internal {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":18986:19007  account == address(0) */\n  dup3\n  and\n    /* \"GobinGelt.sol\":18982:19075  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"GobinGelt.sol\":19031:19063  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"GobinGelt.sol\":19060:19061  0 */\n  0x00\n    /* \"GobinGelt.sol\":19031:19063  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3142:3193   */\n  mstore\n    /* \"#utility.yul\":3115:3133   */\n  0x24\n  add\n    /* \"GobinGelt.sol\":19031:19063  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2996:3199   */\n  jump\n    /* \"GobinGelt.sol\":18982:19075  if (account == address(0)) {... */\ntag_30:\n    /* \"GobinGelt.sol\":19085:19120  _update(address(0), account, value) */\n  tag_32\n    /* \"GobinGelt.sol\":19101:19102  0 */\n  0x00\n    /* \"GobinGelt.sol\":19105:19112  account */\n  dup4\n    /* \"GobinGelt.sol\":19114:19119  value */\n  dup4\n    /* \"GobinGelt.sol\":19085:19092  _update */\n  tag_33\n    /* \"GobinGelt.sol\":19085:19120  _update(address(0), account, value) */\n  jump\t// in\ntag_32:\n    /* \"GobinGelt.sol\":18915:19128  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"GobinGelt.sol\":17427:18562  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":17517:17535  from == address(0) */\n  dup4\n  and\n    /* \"GobinGelt.sol\":17513:18065  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"GobinGelt.sol\":17671:17676  value */\n  dup1\n    /* \"GobinGelt.sol\":17655:17667  _totalSupply */\n  0x02\n  0x00\n    /* \"GobinGelt.sol\":17655:17676  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"GobinGelt.sol\":17513:18065  if (from == address(0)) {... */\n  tag_38\n  swap1\n  pop\n  jump\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":17731:17746  _balances[from] */\n  dup4\n  and\n    /* \"GobinGelt.sol\":17709:17728  uint256 fromBalance */\n  0x00\n    /* \"GobinGelt.sol\":17731:17746  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"GobinGelt.sol\":17765:17784  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"GobinGelt.sol\":17761:17878  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"GobinGelt.sol\":17812:17862  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5236:5268   */\n  dup6\n  and\n    /* \"GobinGelt.sol\":17812:17862  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5218:5269   */\n  mstore\n    /* \"#utility.yul\":5285:5303   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5278:5312   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5328:5346   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5321:5355   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5191:5209   */\n  0x64\n  add\n    /* \"GobinGelt.sol\":17812:17862  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":5016:5361   */\n  jump\n    /* \"GobinGelt.sol\":17761:17878  if (fromBalance < value) {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":18001:18016  _balances[from] */\n  dup5\n  and\n    /* \"GobinGelt.sol\":18001:18010  _balances */\n  0x00\n    /* \"GobinGelt.sol\":18001:18016  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"GobinGelt.sol\":18019:18038  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"GobinGelt.sol\":18001:18038  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"GobinGelt.sol\":17513:18065  if (from == address(0)) {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":18081:18097  to == address(0) */\n  dup3\n  and\n    /* \"GobinGelt.sol\":18077:18512  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"GobinGelt.sol\":18247:18259  _totalSupply */\n  0x02\n    /* \"GobinGelt.sol\":18247:18268  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"GobinGelt.sol\":18077:18512  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":18463:18476  _balances[to] */\n  dup3\n  and\n    /* \"GobinGelt.sol\":18463:18472  _balances */\n  0x00\n    /* \"GobinGelt.sol\":18463:18476  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"GobinGelt.sol\":18463:18485  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"GobinGelt.sol\":18077:18512  if (to == address(0)) {... */\ntag_43:\n    /* \"GobinGelt.sol\":18544:18546  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n  and\n    /* \"GobinGelt.sol\":18538:18542  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"GobinGelt.sol\":18548:18553  value */\n  dup4\n    /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n    /* \"#utility.yul\":5512:5537   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5500:5502   */\n  0x20\n    /* \"#utility.yul\":5485:5503   */\n  add\n  swap1\n    /* \"#utility.yul\":5366:5543   */\n  jump\n    /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"GobinGelt.sol\":17427:18562  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_56:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_57:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_46:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_47:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_60:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_61:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_49:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_65:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_66:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_64:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_72\n  tag_46\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1850:1947   */\n  tag_73\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_74\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_47\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_49\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_77:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_75)\n    /* \"#utility.yul\":2071:2734   */\ntag_76:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_80:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_83:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_75:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3204:3331   */\ntag_51:\n    /* \"#utility.yul\":3265:3275   */\n  0x4e487b71\n    /* \"#utility.yul\":3260:3263   */\n  0xe0\n    /* \"#utility.yul\":3256:3276   */\n  shl\n    /* \"#utility.yul\":3253:3254   */\n  0x00\n    /* \"#utility.yul\":3246:3277   */\n  mstore\n    /* \"#utility.yul\":3296:3300   */\n  0x11\n    /* \"#utility.yul\":3293:3294   */\n  0x04\n    /* \"#utility.yul\":3286:3301   */\n  mstore\n    /* \"#utility.yul\":3320:3324   */\n  0x24\n    /* \"#utility.yul\":3317:3318   */\n  0x00\n    /* \"#utility.yul\":3310:3325   */\n  revert\n    /* \"#utility.yul\":3336:3752   */\ntag_52:\n    /* \"#utility.yul\":3425:3426   */\n  0x01\n    /* \"#utility.yul\":3462:3467   */\n  dup2\n    /* \"#utility.yul\":3425:3426   */\n  dup2\n    /* \"#utility.yul\":3476:3746   */\ntag_87:\n    /* \"#utility.yul\":3497:3504   */\n  dup1\n    /* \"#utility.yul\":3487:3495   */\n  dup6\n    /* \"#utility.yul\":3484:3505   */\n  gt\n    /* \"#utility.yul\":3476:3746   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3556:3560   */\n  dup2\n    /* \"#utility.yul\":3552:3553   */\n  0x00\n    /* \"#utility.yul\":3548:3554   */\n  not\n    /* \"#utility.yul\":3544:3561   */\n  div\n    /* \"#utility.yul\":3538:3542   */\n  dup3\n    /* \"#utility.yul\":3535:3562   */\n  gt\n    /* \"#utility.yul\":3532:3585   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3565:3583   */\n  tag_91\n  tag_51\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3615:3622   */\n  dup1\n    /* \"#utility.yul\":3605:3613   */\n  dup6\n    /* \"#utility.yul\":3601:3623   */\n  and\n    /* \"#utility.yul\":3598:3653   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3635:3651   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3598:3653   */\ntag_92:\n    /* \"#utility.yul\":3714:3736   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3674:3689   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3476:3746   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":3480:3483   */\n  pop\n    /* \"#utility.yul\":3336:3752   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3757:4563   */\ntag_53:\n    /* \"#utility.yul\":3806:3811   */\n  0x00\n    /* \"#utility.yul\":3836:3844   */\n  dup3\n    /* \"#utility.yul\":3826:3906   */\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":3877:3878   */\n  0x01\n    /* \"#utility.yul\":3891:3896   */\n  jump(tag_93)\n    /* \"#utility.yul\":3826:3906   */\ntag_94:\n    /* \"#utility.yul\":3925:3929   */\n  dup2\n    /* \"#utility.yul\":3915:3991   */\n  tag_95\n  jumpi\n  pop\n    /* \"#utility.yul\":3962:3963   */\n  0x00\n    /* \"#utility.yul\":3976:3981   */\n  jump(tag_93)\n    /* \"#utility.yul\":3915:3991   */\ntag_95:\n    /* \"#utility.yul\":4007:4011   */\n  dup2\n    /* \"#utility.yul\":4025:4026   */\n  0x01\n    /* \"#utility.yul\":4020:4079   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4093:4094   */\n  0x02\n    /* \"#utility.yul\":4088:4218   */\n  dup2\n  eq\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4000:4218   */\n  jump(tag_96)\n    /* \"#utility.yul\":4020:4079   */\ntag_97:\n    /* \"#utility.yul\":4050:4051   */\n  0x01\n    /* \"#utility.yul\":4041:4051   */\n  swap2\n  pop\n    /* \"#utility.yul\":4064:4069   */\n  pop\n  jump(tag_93)\n    /* \"#utility.yul\":4088:4218   */\ntag_98:\n    /* \"#utility.yul\":4125:4128   */\n  0xff\n    /* \"#utility.yul\":4115:4123   */\n  dup5\n    /* \"#utility.yul\":4112:4129   */\n  gt\n    /* \"#utility.yul\":4109:4152   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4132:4150   */\n  tag_100\n  tag_51\n  jump\t// in\ntag_100:\n  pop\n  pop\n    /* \"#utility.yul\":4188:4189   */\n  0x01\n    /* \"#utility.yul\":4174:4190   */\n  dup3\n  shl\n    /* \"#utility.yul\":4203:4208   */\n  jump(tag_93)\n    /* \"#utility.yul\":4000:4218   */\ntag_96:\n  pop\n    /* \"#utility.yul\":4302:4304   */\n  0x20\n    /* \"#utility.yul\":4292:4300   */\n  dup4\n    /* \"#utility.yul\":4289:4305   */\n  lt\n    /* \"#utility.yul\":4283:4286   */\n  0x0133\n    /* \"#utility.yul\":4277:4281   */\n  dup4\n    /* \"#utility.yul\":4274:4287   */\n  lt\n    /* \"#utility.yul\":4270:4306   */\n  and\n    /* \"#utility.yul\":4264:4266   */\n  0x4e\n    /* \"#utility.yul\":4254:4262   */\n  dup5\n    /* \"#utility.yul\":4251:4267   */\n  lt\n    /* \"#utility.yul\":4246:4248   */\n  0x0b\n    /* \"#utility.yul\":4240:4244   */\n  dup5\n    /* \"#utility.yul\":4237:4249   */\n  lt\n    /* \"#utility.yul\":4233:4268   */\n  and\n    /* \"#utility.yul\":4230:4307   */\n  or\n    /* \"#utility.yul\":4227:4386   */\n  iszero\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":4339:4358   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4371:4376   */\n  jump(tag_93)\n    /* \"#utility.yul\":4227:4386   */\ntag_101:\n    /* \"#utility.yul\":4418:4452   */\n  tag_102\n    /* \"#utility.yul\":4443:4451   */\n  dup4\n    /* \"#utility.yul\":4437:4441   */\n  dup4\n    /* \"#utility.yul\":4418:4452   */\n  tag_52\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4488:4494   */\n  dup1\n    /* \"#utility.yul\":4484:4485   */\n  0x00\n    /* \"#utility.yul\":4480:4486   */\n  not\n    /* \"#utility.yul\":4476:4495   */\n  div\n    /* \"#utility.yul\":4467:4474   */\n  dup3\n    /* \"#utility.yul\":4464:4496   */\n  gt\n    /* \"#utility.yul\":4461:4519   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4499:4517   */\n  tag_104\n  tag_51\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4537:4557   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3757:4563   */\ntag_93:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4568:4708   */\ntag_22:\n    /* \"#utility.yul\":4626:4631   */\n  0x00\n    /* \"#utility.yul\":4655:4702   */\n  tag_57\n    /* \"#utility.yul\":4696:4700   */\n  0xff\n    /* \"#utility.yul\":4686:4694   */\n  dup5\n    /* \"#utility.yul\":4682:4701   */\n  and\n    /* \"#utility.yul\":4676:4680   */\n  dup4\n    /* \"#utility.yul\":4655:4702   */\n  tag_53\n  jump\t// in\n    /* \"#utility.yul\":4713:4881   */\ntag_24:\n    /* \"#utility.yul\":4786:4795   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4817:4826   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4834:4849   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4828:4850   */\n  dup5\n  eq\n    /* \"#utility.yul\":4814:4851   */\n  or\n    /* \"#utility.yul\":4804:4875   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4855:4873   */\n  tag_93\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":4886:5011   */\ntag_37:\n    /* \"#utility.yul\":4951:4960   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4972:4982   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4969:5005   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4985:5003   */\n  tag_93\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":5366:5543   */\ntag_54:\n    /* \"GobinGelt.sol\":25796:26120  contract GoblinGelt is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GobinGelt.sol\":25796:26120  contract GoblinGelt is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GobinGelt.sol\":13068:13159  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GobinGelt.sol\":15361:15551  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"GobinGelt.sol\":15361:15551  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"GobinGelt.sol\":14170:14269  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"GobinGelt.sol\":14249:14261  _totalSupply */\n      sload(0x02)\n        /* \"GobinGelt.sol\":14170:14269  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"GobinGelt.sol\":14170:14269  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"GobinGelt.sol\":16161:16410  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"GobinGelt.sol\":14021:14105  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"GobinGelt.sol\":14095:14097  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"GobinGelt.sol\":14021:14105  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"GobinGelt.sol\":26022:26117  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"GobinGelt.sol\":14332:14450  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":14424:14442  _balances[account] */\n      and\n        /* \"GobinGelt.sol\":14397:14404  uint256 */\n      0x00\n        /* \"GobinGelt.sol\":14424:14442  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"GobinGelt.sol\":14332:14450  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"GobinGelt.sol\":24797:24900  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_50\n      jump\t// in\n        /* \"GobinGelt.sol\":24122:24209  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"GobinGelt.sol\":24195:24201  _owner */\n      sload(0x05)\n        /* \"GobinGelt.sol\":24122:24209  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":24195:24201  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"GobinGelt.sol\":24122:24209  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":13278:13373  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_56\n      jump\t// in\n        /* \"GobinGelt.sol\":14655:14837  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"GobinGelt.sol\":14900:15042  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_28\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":15007:15025  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"GobinGelt.sol\":14980:14987  uint256 */\n      0x00\n        /* \"GobinGelt.sol\":15007:15025  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":15007:15018  _allowances */\n      0x01\n        /* \"GobinGelt.sol\":15007:15025  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GobinGelt.sol\":15007:15034  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"GobinGelt.sol\":14900:15042  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"GobinGelt.sol\":25055:25275  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"GobinGelt.sol\":13068:13159  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"GobinGelt.sol\":13113:13126  string memory */\n      0x60\n        /* \"GobinGelt.sol\":13146:13151  _name */\n      0x03\n        /* \"GobinGelt.sol\":13139:13151  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GobinGelt.sol\":13068:13159  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"GobinGelt.sol\":15361:15551  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"GobinGelt.sol\":15434:15438  bool */\n      0x00\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      caller\n        /* \"GobinGelt.sol\":15490:15521  _approve(owner, spender, value) */\n      tag_80\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      dup2\n        /* \"GobinGelt.sol\":15506:15513  spender */\n      dup6\n        /* \"GobinGelt.sol\":15515:15520  value */\n      dup6\n        /* \"GobinGelt.sol\":15490:15498  _approve */\n      tag_81\n        /* \"GobinGelt.sol\":15490:15521  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"GobinGelt.sol\":15539:15543  true */\n      0x01\n        /* \"GobinGelt.sol\":15532:15543  return true */\n      swap2\n      pop\n      pop\n        /* \"GobinGelt.sol\":15361:15551  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":16161:16410  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"GobinGelt.sol\":16248:16252  bool */\n      0x00\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      caller\n        /* \"GobinGelt.sol\":16306:16343  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"GobinGelt.sol\":16322:16326  from */\n      dup6\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      dup3\n        /* \"GobinGelt.sol\":16337:16342  value */\n      dup6\n        /* \"GobinGelt.sol\":16306:16321  _spendAllowance */\n      tag_86\n        /* \"GobinGelt.sol\":16306:16343  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"GobinGelt.sol\":16354:16380  _transfer(from, to, value) */\n      tag_87\n        /* \"GobinGelt.sol\":16364:16368  from */\n      dup6\n        /* \"GobinGelt.sol\":16370:16372  to */\n      dup6\n        /* \"GobinGelt.sol\":16374:16379  value */\n      dup6\n        /* \"GobinGelt.sol\":16354:16363  _transfer */\n      tag_88\n        /* \"GobinGelt.sol\":16354:16380  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n      pop\n        /* \"GobinGelt.sol\":16398:16402  true */\n      0x01\n      swap5\n        /* \"GobinGelt.sol\":16161:16410  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":26022:26117  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"GobinGelt.sol\":24008:24021  _checkOwner() */\n      tag_91\n        /* \"GobinGelt.sol\":24008:24019  _checkOwner */\n      tag_92\n        /* \"GobinGelt.sol\":24008:24021  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"GobinGelt.sol\":26092:26109  _mint(to, amount) */\n      tag_94\n        /* \"GobinGelt.sol\":26098:26100  to */\n      dup3\n        /* \"GobinGelt.sol\":26102:26108  amount */\n      dup3\n        /* \"GobinGelt.sol\":26092:26097  _mint */\n      tag_95\n        /* \"GobinGelt.sol\":26092:26109  _mint(to, amount) */\n      jump\t// in\n    tag_94:\n        /* \"GobinGelt.sol\":26022:26117  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":24797:24900  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"GobinGelt.sol\":24008:24021  _checkOwner() */\n      tag_98\n        /* \"GobinGelt.sol\":24008:24019  _checkOwner */\n      tag_92\n        /* \"GobinGelt.sol\":24008:24021  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"GobinGelt.sol\":24862:24892  _transferOwnership(address(0)) */\n      tag_100\n        /* \"GobinGelt.sol\":24889:24890  0 */\n      0x00\n        /* \"GobinGelt.sol\":24862:24880  _transferOwnership */\n      tag_101\n        /* \"GobinGelt.sol\":24862:24892  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"GobinGelt.sol\":24797:24900  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"GobinGelt.sol\":13278:13373  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"GobinGelt.sol\":13325:13338  string memory */\n      0x60\n        /* \"GobinGelt.sol\":13358:13365  _symbol */\n      0x04\n        /* \"GobinGelt.sol\":13351:13365  return _symbol */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n        /* \"GobinGelt.sol\":14655:14837  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"GobinGelt.sol\":14724:14728  bool */\n      0x00\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      caller\n        /* \"GobinGelt.sol\":14780:14807  _transfer(owner, to, value) */\n      tag_80\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      dup2\n        /* \"GobinGelt.sol\":14797:14799  to */\n      dup6\n        /* \"GobinGelt.sol\":14801:14806  value */\n      dup6\n        /* \"GobinGelt.sol\":14780:14789  _transfer */\n      tag_88\n        /* \"GobinGelt.sol\":14780:14807  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"GobinGelt.sol\":25055:25275  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"GobinGelt.sol\":24008:24021  _checkOwner() */\n      tag_114\n        /* \"GobinGelt.sol\":24008:24019  _checkOwner */\n      tag_92\n        /* \"GobinGelt.sol\":24008:24021  _checkOwner() */\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":25140:25162  newOwner == address(0) */\n      dup2\n      and\n        /* \"GobinGelt.sol\":25136:25229  if (newOwner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"GobinGelt.sol\":25186:25217  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":25214:25215  0 */\n      0x00\n        /* \"GobinGelt.sol\":25186:25217  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":25186:25217  OwnableInvalidOwner(address(0)) */\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GobinGelt.sol\":25136:25229  if (newOwner == address(0)) {... */\n    tag_116:\n        /* \"GobinGelt.sol\":25239:25267  _transferOwnership(newOwner) */\n      tag_118\n        /* \"GobinGelt.sol\":25258:25266  newOwner */\n      dup2\n        /* \"GobinGelt.sol\":25239:25257  _transferOwnership */\n      tag_101\n        /* \"GobinGelt.sol\":25239:25267  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"GobinGelt.sol\":25055:25275  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":20220:20350  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"GobinGelt.sol\":20305:20342  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"GobinGelt.sol\":20314:20319  owner */\n      dup4\n        /* \"GobinGelt.sol\":20321:20328  spender */\n      dup4\n        /* \"GobinGelt.sol\":20330:20335  value */\n      dup4\n        /* \"GobinGelt.sol\":20337:20341  true */\n      0x01\n        /* \"GobinGelt.sol\":20305:20313  _approve */\n      tag_122\n        /* \"GobinGelt.sol\":20305:20342  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"GobinGelt.sol\":20220:20350  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":21952:22439  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":15007:15025  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"GobinGelt.sol\":22052:22076  uint256 currentAllowance */\n      0x00\n        /* \"GobinGelt.sol\":15007:15025  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":15007:15018  _allowances */\n      0x01\n        /* \"GobinGelt.sol\":15007:15025  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GobinGelt.sol\":15007:15034  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"GobinGelt.sol\":22119:22156  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"GobinGelt.sol\":22115:22432  if (currentAllowance != type(uint256).max) {... */\n      tag_129\n      jumpi\n        /* \"GobinGelt.sol\":22196:22201  value */\n      dup2\n        /* \"GobinGelt.sol\":22177:22193  currentAllowance */\n      dup2\n        /* \"GobinGelt.sol\":22177:22201  currentAllowance < value */\n      lt\n        /* \"GobinGelt.sol\":22173:22305  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"GobinGelt.sol\":22229:22289  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3169:3201   */\n      dup5\n      and\n        /* \"GobinGelt.sol\":22229:22289  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3151:3202   */\n      mstore\n        /* \"#utility.yul\":3218:3236   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3211:3245   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3261:3279   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3254:3288   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3124:3142   */\n      0x64\n      add\n        /* \"GobinGelt.sol\":22229:22289  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_117\n        /* \"#utility.yul\":2949:3294   */\n      jump\n        /* \"GobinGelt.sol\":22173:22305  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"GobinGelt.sol\":22348:22405  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"GobinGelt.sol\":22357:22362  owner */\n      dup5\n        /* \"GobinGelt.sol\":22364:22371  spender */\n      dup5\n        /* \"GobinGelt.sol\":22392:22397  value */\n      dup5\n        /* \"GobinGelt.sol\":22373:22389  currentAllowance */\n      dup5\n        /* \"GobinGelt.sol\":22373:22397  currentAllowance - value */\n      sub\n        /* \"GobinGelt.sol\":22399:22404  false */\n      0x00\n        /* \"GobinGelt.sol\":22348:22356  _approve */\n      tag_122\n        /* \"GobinGelt.sol\":22348:22405  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"GobinGelt.sol\":22041:22439  {... */\n      pop\n        /* \"GobinGelt.sol\":21952:22439  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":16795:17103  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":16879:16897  from == address(0) */\n      dup4\n      and\n        /* \"GobinGelt.sol\":16875:16963  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"GobinGelt.sol\":16921:16951  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":16948:16949  0 */\n      0x00\n        /* \"GobinGelt.sol\":16921:16951  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":16921:16951  ERC20InvalidSender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":16875:16963  if (from == address(0)) {... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":16977:16993  to == address(0) */\n      dup3\n      and\n        /* \"GobinGelt.sol\":16973:17061  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"GobinGelt.sol\":17017:17049  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":17046:17047  0 */\n      0x00\n        /* \"GobinGelt.sol\":17017:17049  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":17017:17049  ERC20InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":16973:17061  if (to == address(0)) {... */\n    tag_133:\n        /* \"GobinGelt.sol\":17071:17095  _update(from, to, value) */\n      tag_121\n        /* \"GobinGelt.sol\":17079:17083  from */\n      dup4\n        /* \"GobinGelt.sol\":17085:17087  to */\n      dup4\n        /* \"GobinGelt.sol\":17089:17094  value */\n      dup4\n        /* \"GobinGelt.sol\":17071:17078  _update */\n      tag_136\n        /* \"GobinGelt.sol\":17071:17095  _update(from, to, value) */\n      jump\t// in\n        /* \"GobinGelt.sol\":24287:24453  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"GobinGelt.sol\":24195:24201  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      caller\n        /* \"GobinGelt.sol\":24347:24370  owner() != _msgSender() */\n      eq\n        /* \"GobinGelt.sol\":24343:24446  if (owner() != _msgSender()) {... */\n      tag_100\n      jumpi\n        /* \"GobinGelt.sol\":24394:24434  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":4435:4445  msg.sender */\n      caller\n        /* \"GobinGelt.sol\":24394:24434  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":24394:24434  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_117\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":18915:19128  function _mint(address account, uint256 value) internal {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":18986:19007  account == address(0) */\n      dup3\n      and\n        /* \"GobinGelt.sol\":18982:19075  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"GobinGelt.sol\":19031:19063  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":19060:19061  0 */\n      0x00\n        /* \"GobinGelt.sol\":19031:19063  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":19031:19063  ERC20InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":18982:19075  if (account == address(0)) {... */\n    tag_144:\n        /* \"GobinGelt.sol\":19085:19120  _update(address(0), account, value) */\n      tag_94\n        /* \"GobinGelt.sol\":19101:19102  0 */\n      0x00\n        /* \"GobinGelt.sol\":19105:19112  account */\n      dup4\n        /* \"GobinGelt.sol\":19114:19119  value */\n      dup4\n        /* \"GobinGelt.sol\":19085:19092  _update */\n      tag_136\n        /* \"GobinGelt.sol\":19085:19120  _update(address(0), account, value) */\n      jump\t// in\n        /* \"GobinGelt.sol\":25435:25626  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_101:\n        /* \"GobinGelt.sol\":25528:25534  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":25545:25562  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"GobinGelt.sol\":25578:25618  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"GobinGelt.sol\":25528:25534  _owner */\n      swap2\n      and\n      swap2\n        /* \"GobinGelt.sol\":25545:25562  _owner = newOwner */\n      swap1\n        /* \"GobinGelt.sol\":25528:25534  _owner */\n      dup3\n      swap1\n        /* \"GobinGelt.sol\":25578:25618  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"GobinGelt.sol\":25509:25525  address oldOwner */\n      0x00\n      swap1\n        /* \"GobinGelt.sol\":25578:25618  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"GobinGelt.sol\":25498:25626  {... */\n      pop\n        /* \"GobinGelt.sol\":25435:25626  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":21217:21660  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":21330:21349  owner == address(0) */\n      dup5\n      and\n        /* \"GobinGelt.sol\":21326:21417  if (owner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"GobinGelt.sol\":21373:21405  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":21402:21403  0 */\n      0x00\n        /* \"GobinGelt.sol\":21373:21405  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":21373:21405  ERC20InvalidApprover(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":21326:21417  if (owner == address(0)) {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":21431:21452  spender == address(0) */\n      dup4\n      and\n        /* \"GobinGelt.sol\":21427:21519  if (spender == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"GobinGelt.sol\":21476:21507  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":21504:21505  0 */\n      0x00\n        /* \"GobinGelt.sol\":21476:21507  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"GobinGelt.sol\":21476:21507  ERC20InvalidSpender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"GobinGelt.sol\":21427:21519  if (spender == address(0)) {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":21529:21547  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GobinGelt.sol\":21529:21540  _allowances */\n      0x01\n        /* \"GobinGelt.sol\":21529:21547  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GobinGelt.sol\":21529:21556  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"GobinGelt.sol\":21529:21564  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"GobinGelt.sol\":21575:21653  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_129\n      jumpi\n        /* \"GobinGelt.sol\":21626:21633  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":21610:21641  Approval(owner, spender, value) */\n      and\n        /* \"GobinGelt.sol\":21619:21624  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":21610:21641  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"GobinGelt.sol\":21635:21640  value */\n      dup5\n        /* \"GobinGelt.sol\":21610:21641  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_154\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"GobinGelt.sol\":21610:21641  Approval(owner, spender, value) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GobinGelt.sol\":21217:21660  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GobinGelt.sol\":17427:18562  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":17517:17535  from == address(0) */\n      dup4\n      and\n        /* \"GobinGelt.sol\":17513:18065  if (from == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"GobinGelt.sol\":17671:17676  value */\n      dup1\n        /* \"GobinGelt.sol\":17655:17667  _totalSupply */\n      0x02\n      0x00\n        /* \"GobinGelt.sol\":17655:17676  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"GobinGelt.sol\":17513:18065  if (from == address(0)) {... */\n      tag_159\n      swap1\n      pop\n      jump\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":17731:17746  _balances[from] */\n      dup4\n      and\n        /* \"GobinGelt.sol\":17709:17728  uint256 fromBalance */\n      0x00\n        /* \"GobinGelt.sol\":17731:17746  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"GobinGelt.sol\":17765:17784  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"GobinGelt.sol\":17761:17878  if (fromBalance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"GobinGelt.sol\":17812:17862  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3169:3201   */\n      dup6\n      and\n        /* \"GobinGelt.sol\":17812:17862  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3151:3202   */\n      mstore\n        /* \"#utility.yul\":3218:3236   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3211:3245   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3261:3279   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3254:3288   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3124:3142   */\n      0x64\n      add\n        /* \"GobinGelt.sol\":17812:17862  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_117\n        /* \"#utility.yul\":2949:3294   */\n      jump\n        /* \"GobinGelt.sol\":17761:17878  if (fromBalance < value) {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":18001:18016  _balances[from] */\n      dup5\n      and\n        /* \"GobinGelt.sol\":18001:18010  _balances */\n      0x00\n        /* \"GobinGelt.sol\":18001:18016  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GobinGelt.sol\":18019:18038  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"GobinGelt.sol\":18001:18038  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"GobinGelt.sol\":17513:18065  if (from == address(0)) {... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":18081:18097  to == address(0) */\n      dup3\n      and\n        /* \"GobinGelt.sol\":18077:18512  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"GobinGelt.sol\":18247:18259  _totalSupply */\n      0x02\n        /* \"GobinGelt.sol\":18247:18268  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"GobinGelt.sol\":18077:18512  if (to == address(0)) {... */\n      jump(tag_163)\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":18463:18476  _balances[to] */\n      dup3\n      and\n        /* \"GobinGelt.sol\":18463:18472  _balances */\n      0x00\n        /* \"GobinGelt.sol\":18463:18476  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GobinGelt.sol\":18463:18485  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"GobinGelt.sol\":18077:18512  if (to == address(0)) {... */\n    tag_163:\n        /* \"GobinGelt.sol\":18544:18546  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n      and\n        /* \"GobinGelt.sol\":18538:18542  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"GobinGelt.sol\":18548:18553  value */\n      dup4\n        /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n      mload(0x40)\n      tag_164\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"GobinGelt.sol\":18529:18554  Transfer(from, to, value) */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GobinGelt.sol\":17427:18562  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_21:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_168:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_168)\n    tag_170:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_165:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_172:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_24:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_174:\n        /* \"#utility.yul\":913:942   */\n      tag_175\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_165\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_34:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_179:\n        /* \"#utility.yul\":1563:1592   */\n      tag_180\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_165\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_181\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_165\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_46:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_184:\n        /* \"#utility.yul\":2051:2080   */\n      tag_185\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_165\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_64:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_188:\n        /* \"#utility.yul\":2467:2496   */\n      tag_189\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_165\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_190\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_165\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_72:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_192:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_193:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3299:3521   */\n    tag_158:\n        /* \"#utility.yul\":3364:3373   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3385:3395   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3382:3515   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3437:3447   */\n      0x4e487b71\n        /* \"#utility.yul\":3432:3435   */\n      0xe0\n        /* \"#utility.yul\":3428:3448   */\n      shl\n        /* \"#utility.yul\":3425:3426   */\n      0x00\n        /* \"#utility.yul\":3418:3449   */\n      mstore\n        /* \"#utility.yul\":3472:3476   */\n      0x11\n        /* \"#utility.yul\":3469:3470   */\n      0x04\n        /* \"#utility.yul\":3462:3477   */\n      mstore\n        /* \"#utility.yul\":3500:3504   */\n      0x24\n        /* \"#utility.yul\":3497:3498   */\n      0x00\n        /* \"#utility.yul\":3490:3505   */\n      revert\n\n    auxdata: 0xa2646970667358221220771682e3e478644958c395a80f43eb2e8ae267695a89a6c9a522ee821687c50064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 340,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 259,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 400,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5545:1",
										"nodeType": "YulBlock",
										"src": "0:5545:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "341:95:1",
													"nodeType": "YulBlock",
													"src": "341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:1",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:1",
																				"nodeType": "YulLiteral",
																				"src": "365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:1",
																				"nodeType": "YulLiteral",
																				"src": "370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:1"
																		},
																		"nativeSrc": "361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nativeSrc": "351:31:1",
																"nodeType": "YulFunctionCall",
																"src": "351:31:1"
															},
															"nativeSrc": "351:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:1",
																		"nodeType": "YulLiteral",
																		"src": "398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:1",
																		"nodeType": "YulLiteral",
																		"src": "401:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:1"
																},
																"nativeSrc": "391:15:1",
																"nodeType": "YulFunctionCall",
																"src": "391:15:1"
															},
															"nativeSrc": "391:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:1",
																		"nodeType": "YulLiteral",
																		"src": "425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:1"
																},
																"nativeSrc": "415:15:1",
																"nodeType": "YulFunctionCall",
																"src": "415:15:1"
															},
															"nativeSrc": "415:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:1"
											},
											{
												"body": {
													"nativeSrc": "496:325:1",
													"nodeType": "YulBlock",
													"src": "496:325:1",
													"statements": [
														{
															"nativeSrc": "506:22:1",
															"nodeType": "YulAssignment",
															"src": "506:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:1",
																		"nodeType": "YulLiteral",
																		"src": "520:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nativeSrc": "516:12:1",
																"nodeType": "YulFunctionCall",
																"src": "516:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:1"
																}
															]
														},
														{
															"nativeSrc": "537:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "573:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nativeSrc": "563:12:1",
																"nodeType": "YulFunctionCall",
																"src": "563:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:1",
																	"nodeType": "YulTypedName",
																	"src": "541:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:1",
																"nodeType": "YulBlock",
																"src": "614:31:1",
																"statements": [
																	{
																		"nativeSrc": "616:27:1",
																		"nodeType": "YulAssignment",
																		"src": "616:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:1",
																					"nodeType": "YulLiteral",
																					"src": "638:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:1"
																			},
																			"nativeSrc": "626:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:1"
																},
																"nativeSrc": "587:26:1",
																"nodeType": "YulFunctionCall",
																"src": "587:26:1"
															},
															"nativeSrc": "584:61:1",
															"nodeType": "YulIf",
															"src": "584:61:1"
														},
														{
															"body": {
																"nativeSrc": "704:111:1",
																"nodeType": "YulBlock",
																"src": "704:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:1",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:1",
																							"nodeType": "YulLiteral",
																							"src": "732:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:1",
																							"nodeType": "YulLiteral",
																							"src": "737:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:1"
																					},
																					"nativeSrc": "728:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:1"
																			},
																			"nativeSrc": "718:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:1"
																		},
																		"nativeSrc": "718:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:1",
																					"nodeType": "YulLiteral",
																					"src": "769:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:1",
																					"nodeType": "YulLiteral",
																					"src": "772:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:1"
																			},
																			"nativeSrc": "762:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:1"
																		},
																		"nativeSrc": "762:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:1",
																					"nodeType": "YulLiteral",
																					"src": "800:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nativeSrc": "790:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:1"
																		},
																		"nativeSrc": "790:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:1",
																				"nodeType": "YulLiteral",
																				"src": "691:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:1"
																		},
																		"nativeSrc": "680:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:1"
																},
																"nativeSrc": "657:38:1",
																"nodeType": "YulFunctionCall",
																"src": "657:38:1"
															},
															"nativeSrc": "654:161:1",
															"nodeType": "YulIf",
															"src": "654:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:1",
														"nodeType": "YulTypedName",
														"src": "476:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:1",
														"nodeType": "YulTypedName",
														"src": "485:6:1",
														"type": ""
													}
												],
												"src": "441:380:1"
											},
											{
												"body": {
													"nativeSrc": "882:65:1",
													"nodeType": "YulBlock",
													"src": "882:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:1",
																		"nodeType": "YulLiteral",
																		"src": "899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nativeSrc": "892:14:1",
																"nodeType": "YulFunctionCall",
																"src": "892:14:1"
															},
															"nativeSrc": "892:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:1"
														},
														{
															"nativeSrc": "915:26:1",
															"nodeType": "YulAssignment",
															"src": "915:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "936:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:1"
																},
																"nativeSrc": "923:18:1",
																"nodeType": "YulFunctionCall",
																"src": "923:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:1",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:1",
														"nodeType": "YulTypedName",
														"src": "873:4:1",
														"type": ""
													}
												],
												"src": "826:121:1"
											},
											{
												"body": {
													"nativeSrc": "1033:437:1",
													"nodeType": "YulBlock",
													"src": "1033:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:1",
																"nodeType": "YulBlock",
																"src": "1066:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:1"
																			},
																			"nativeSrc": "1080:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:1"
																		},
																		"nativeSrc": "1080:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:1"
																	},
																	{
																		"nativeSrc": "1109:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:1"
																			},
																			"nativeSrc": "1121:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:1"
																							},
																							"nativeSrc": "1188:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:1"
																					},
																					"nativeSrc": "1181:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:1"
																			},
																			"nativeSrc": "1171:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:1",
																			"nodeType": "YulBlock",
																			"src": "1246:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:1"
																			},
																			"nativeSrc": "1225:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:1"
																		},
																		"nativeSrc": "1222:47:1",
																		"nodeType": "YulIf",
																		"src": "1222:47:1"
																	},
																	{
																		"nativeSrc": "1282:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:1"
																							},
																							"nativeSrc": "1309:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:1"
																					},
																					"nativeSrc": "1302:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:1"
																			},
																			"nativeSrc": "1292:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:1",
																			"nodeType": "YulBlock",
																			"src": "1434:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:1"
																						},
																						"nativeSrc": "1436:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:1"
																					},
																					"nativeSrc": "1436:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:1"
																			},
																			"nativeSrc": "1381:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:1"
																		},
																		"nativeSrc": "1373:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:1",
																			"nodeType": "YulBlock",
																			"src": "1395:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:1"
																						},
																						"nativeSrc": "1406:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:1",
																			"nodeType": "YulBlock",
																			"src": "1377:3:1",
																			"statements": []
																		},
																		"src": "1373:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nativeSrc": "1046:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:1"
															},
															"nativeSrc": "1043:421:1",
															"nodeType": "YulIf",
															"src": "1043:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:1",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:1",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:1",
														"nodeType": "YulTypedName",
														"src": "1017:10:1",
														"type": ""
													}
												],
												"src": "952:518:1"
											},
											{
												"body": {
													"nativeSrc": "1560:81:1",
													"nodeType": "YulBlock",
													"src": "1560:81:1",
													"statements": [
														{
															"nativeSrc": "1570:65:1",
															"nodeType": "YulAssignment",
															"src": "1570:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:1"
																								},
																								"nativeSrc": "1599:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:1"
																								},
																								"nativeSrc": "1612:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:1"
																						},
																						"nativeSrc": "1595:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:1"
																				},
																				"nativeSrc": "1591:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:1"
																		},
																		"nativeSrc": "1581:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:1"
																},
																"nativeSrc": "1578:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:1",
														"nodeType": "YulTypedName",
														"src": "1537:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:1",
														"nodeType": "YulTypedName",
														"src": "1543:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:1",
														"nodeType": "YulTypedName",
														"src": "1551:4:1",
														"type": ""
													}
												],
												"src": "1475:166:1"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:1",
													"nodeType": "YulBlock",
													"src": "1742:1249:1",
													"statements": [
														{
															"nativeSrc": "1752:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:1"
																},
																"nativeSrc": "1766:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:1",
																"nodeType": "YulBlock",
																"src": "1819:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:1"
																			},
																			"nativeSrc": "1821:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:1"
																		},
																		"nativeSrc": "1821:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:1"
																				},
																				"nativeSrc": "1803:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:1"
																		},
																		"nativeSrc": "1799:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:1"
																},
																"nativeSrc": "1788:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:1"
															},
															"nativeSrc": "1785:56:1",
															"nodeType": "YulIf",
															"src": "1785:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:1"
																				},
																				"nativeSrc": "1926:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:1"
																		},
																		"nativeSrc": "1900:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:1"
																},
																"nativeSrc": "1850:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:1"
															},
															"nativeSrc": "1850:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:1"
														},
														{
															"nativeSrc": "1956:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:1",
																"nodeType": "YulLiteral",
																"src": "1973:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:1",
																"nodeType": "YulLiteral",
																"src": "2002:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:1",
															"nodeType": "YulAssignment",
															"src": "2015:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:1",
																"nodeType": "YulLiteral",
																"src": "2028:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:1",
																		"nodeType": "YulBlock",
																		"src": "2078:656:1",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:1"
																							},
																							"nativeSrc": "2119:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:1"
																					},
																					"nativeSrc": "2107:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:1"
																					},
																					"nativeSrc": "2154:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:1",
																					"nodeType": "YulBlock",
																					"src": "2289:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:1"
																												},
																												"nativeSrc": "2328:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:1"
																										},
																										"nativeSrc": "2322:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:1"
																								},
																								"nativeSrc": "2307:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:1"
																							},
																							"nativeSrc": "2307:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:1"
																						},
																						{
																							"nativeSrc": "2366:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:1"
																								},
																								"nativeSrc": "2376:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:1"
																								},
																								"nativeSrc": "2420:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:1"
																					},
																					"nativeSrc": "2233:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:1"
																				},
																				"nativeSrc": "2225:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:1",
																					"nodeType": "YulBlock",
																					"src": "2248:28:1",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:1"
																								},
																								"nativeSrc": "2255:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:1",
																					"nodeType": "YulBlock",
																					"src": "2229:3:1",
																					"statements": []
																				},
																				"src": "2225:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:1",
																					"nodeType": "YulBlock",
																					"src": "2509:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:1"
																										},
																										"nativeSrc": "2550:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:1"
																								},
																								"nativeSrc": "2544:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:1"
																																		},
																																		"nativeSrc": "2629:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:1"
																																},
																																"nativeSrc": "2625:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:1"
																																},
																																"nativeSrc": "2651:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:1"
																														},
																														"nativeSrc": "2621:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:1"
																												},
																												"nativeSrc": "2617:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:1"
																										},
																										"nativeSrc": "2602:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:1"
																								},
																								"nativeSrc": "2587:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:1"
																							},
																							"nativeSrc": "2587:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:1"
																					},
																					"nativeSrc": "2477:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:1"
																				},
																				"nativeSrc": "2474:201:1",
																				"nodeType": "YulIf",
																				"src": "2474:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:1"
																									},
																									"nativeSrc": "2705:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:1"
																							},
																							"nativeSrc": "2701:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:1"
																					},
																					"nativeSrc": "2688:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:1"
																				},
																				"nativeSrc": "2688:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:1",
																	"nodeType": "YulCase",
																	"src": "2071:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:1",
																		"nodeType": "YulBlock",
																		"src": "2751:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:1",
																					"nodeType": "YulBlock",
																					"src": "2814:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:1"
																										},
																										"nativeSrc": "2847:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:1"
																								},
																								"nativeSrc": "2841:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:1"
																				},
																				"nativeSrc": "2792:89:1",
																				"nodeType": "YulIf",
																				"src": "2792:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:1"
																							},
																							"nativeSrc": "2907:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:1"
																					},
																					"nativeSrc": "2894:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:1"
																				},
																				"nativeSrc": "2894:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:1",
																	"nodeType": "YulCase",
																	"src": "2743:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:1"
																},
																"nativeSrc": "2048:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:1"
															},
															"nativeSrc": "2041:944:1",
															"nodeType": "YulSwitch",
															"src": "2041:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:1",
														"nodeType": "YulTypedName",
														"src": "1727:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:1",
														"nodeType": "YulTypedName",
														"src": "1733:3:1",
														"type": ""
													}
												],
												"src": "1646:1345:1"
											},
											{
												"body": {
													"nativeSrc": "3097:102:1",
													"nodeType": "YulBlock",
													"src": "3097:102:1",
													"statements": [
														{
															"nativeSrc": "3107:26:1",
															"nodeType": "YulAssignment",
															"src": "3107:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3119:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:1"
																},
																"nativeSrc": "3115:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3115:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3107:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3107:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3149:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3149:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3164:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3180:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3180:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3185:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3185:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3176:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3176:3:1"
																						},
																						"nativeSrc": "3176:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3176:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3189:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3189:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3172:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:1"
																				},
																				"nativeSrc": "3172:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3172:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3160:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3160:3:1"
																		},
																		"nativeSrc": "3160:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3160:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:1"
																},
																"nativeSrc": "3142:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:51:1"
															},
															"nativeSrc": "3142:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3142:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2996:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3066:9:1",
														"nodeType": "YulTypedName",
														"src": "3066:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3077:6:1",
														"nodeType": "YulTypedName",
														"src": "3077:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:1",
														"nodeType": "YulTypedName",
														"src": "3088:4:1",
														"type": ""
													}
												],
												"src": "2996:203:1"
											},
											{
												"body": {
													"nativeSrc": "3236:95:1",
													"nodeType": "YulBlock",
													"src": "3236:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3253:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3253:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3260:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3260:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3265:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3265:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:1"
																		},
																		"nativeSrc": "3256:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:1"
																},
																"nativeSrc": "3246:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3246:31:1"
															},
															"nativeSrc": "3246:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3246:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3293:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3293:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3296:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3296:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:1"
																},
																"nativeSrc": "3286:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3286:15:1"
															},
															"nativeSrc": "3286:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3286:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3320:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3320:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:1"
																},
																"nativeSrc": "3310:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3310:15:1"
															},
															"nativeSrc": "3310:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3310:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3204:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3204:127:1"
											},
											{
												"body": {
													"nativeSrc": "3400:352:1",
													"nodeType": "YulBlock",
													"src": "3400:352:1",
													"statements": [
														{
															"nativeSrc": "3410:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3410:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3425:1:1",
																"nodeType": "YulLiteral",
																"src": "3425:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3414:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3414:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3435:10:1",
															"nodeType": "YulAssignment",
															"src": "3435:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3444:1:1",
																"nodeType": "YulLiteral",
																"src": "3444:1:1",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3435:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3435:5:1"
																}
															]
														},
														{
															"nativeSrc": "3454:13:1",
															"nodeType": "YulAssignment",
															"src": "3454:13:1",
															"value": {
																"name": "_base",
																"nativeSrc": "3462:5:1",
																"nodeType": "YulIdentifier",
																"src": "3462:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3454:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3454:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3518:228:1",
																"nodeType": "YulBlock",
																"src": "3518:228:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3563:22:1",
																			"nodeType": "YulBlock",
																			"src": "3563:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3565:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "3565:16:1"
																						},
																						"nativeSrc": "3565:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3565:18:1"
																					},
																					"nativeSrc": "3565:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "3565:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3538:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3538:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3552:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3552:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3548:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3548:3:1"
																							},
																							"nativeSrc": "3548:6:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3548:6:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3556:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3556:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3544:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3544:3:1"
																					},
																					"nativeSrc": "3544:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3544:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3535:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3535:2:1"
																			},
																			"nativeSrc": "3535:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3535:27:1"
																		},
																		"nativeSrc": "3532:53:1",
																		"nodeType": "YulIf",
																		"src": "3532:53:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "3624:29:1",
																			"nodeType": "YulBlock",
																			"src": "3624:29:1",
																			"statements": [
																				{
																					"nativeSrc": "3626:25:1",
																					"nodeType": "YulAssignment",
																					"src": "3626:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3639:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3639:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3646:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "3646:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3635:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3635:3:1"
																						},
																						"nativeSrc": "3635:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3635:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3626:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "3626:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3605:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3605:8:1"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3615:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3615:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3601:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3601:3:1"
																			},
																			"nativeSrc": "3601:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3601:22:1"
																		},
																		"nativeSrc": "3598:55:1",
																		"nodeType": "YulIf",
																		"src": "3598:55:1"
																	},
																	{
																		"nativeSrc": "3666:23:1",
																		"nodeType": "YulAssignment",
																		"src": "3666:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3678:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3678:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3684:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3684:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3674:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3674:3:1"
																			},
																			"nativeSrc": "3674:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3674:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3666:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3666:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3702:34:1",
																		"nodeType": "YulAssignment",
																		"src": "3702:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3718:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3718:7:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3727:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3727:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3714:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3714:3:1"
																			},
																			"nativeSrc": "3714:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3714:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3702:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "3702:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3487:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3487:8:1"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3497:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3497:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3484:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3484:2:1"
																},
																"nativeSrc": "3484:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3484:21:1"
															},
															"nativeSrc": "3476:270:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3506:3:1",
																"nodeType": "YulBlock",
																"src": "3506:3:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3480:3:1",
																"nodeType": "YulBlock",
																"src": "3480:3:1",
																"statements": []
															},
															"src": "3476:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3336:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3364:5:1",
														"nodeType": "YulTypedName",
														"src": "3364:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3371:8:1",
														"nodeType": "YulTypedName",
														"src": "3371:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3384:5:1",
														"nodeType": "YulTypedName",
														"src": "3384:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3391:4:1",
														"nodeType": "YulTypedName",
														"src": "3391:4:1",
														"type": ""
													}
												],
												"src": "3336:416:1"
											},
											{
												"body": {
													"nativeSrc": "3816:747:1",
													"nodeType": "YulBlock",
													"src": "3816:747:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3854:52:1",
																"nodeType": "YulBlock",
																"src": "3854:52:1",
																"statements": [
																	{
																		"nativeSrc": "3868:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3868:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3877:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3877:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3868:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3868:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3891:5:1",
																		"nodeType": "YulLeave",
																		"src": "3891:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3836:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3836:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:1"
																},
																"nativeSrc": "3829:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3829:16:1"
															},
															"nativeSrc": "3826:80:1",
															"nodeType": "YulIf",
															"src": "3826:80:1"
														},
														{
															"body": {
																"nativeSrc": "3939:52:1",
																"nodeType": "YulBlock",
																"src": "3939:52:1",
																"statements": [
																	{
																		"nativeSrc": "3953:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3953:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3962:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3962:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3953:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3953:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3976:5:1",
																		"nodeType": "YulLeave",
																		"src": "3976:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3925:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3925:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3918:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:1"
																},
																"nativeSrc": "3918:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3918:12:1"
															},
															"nativeSrc": "3915:76:1",
															"nodeType": "YulIf",
															"src": "3915:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4027:52:1",
																		"nodeType": "YulBlock",
																		"src": "4027:52:1",
																		"statements": [
																			{
																				"nativeSrc": "4041:10:1",
																				"nodeType": "YulAssignment",
																				"src": "4041:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4050:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4050:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4041:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4041:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4064:5:1",
																				"nodeType": "YulLeave",
																				"src": "4064:5:1"
																			}
																		]
																	},
																	"nativeSrc": "4020:59:1",
																	"nodeType": "YulCase",
																	"src": "4020:59:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4025:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4025:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4095:123:1",
																		"nodeType": "YulBlock",
																		"src": "4095:123:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4130:22:1",
																					"nodeType": "YulBlock",
																					"src": "4130:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4132:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "4132:16:1"
																								},
																								"nativeSrc": "4132:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4132:18:1"
																							},
																							"nativeSrc": "4132:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4132:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4115:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4115:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4125:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4125:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4112:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4112:2:1"
																					},
																					"nativeSrc": "4112:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4112:17:1"
																				},
																				"nativeSrc": "4109:43:1",
																				"nodeType": "YulIf",
																				"src": "4109:43:1"
																			},
																			{
																				"nativeSrc": "4165:25:1",
																				"nodeType": "YulAssignment",
																				"src": "4165:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4178:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4178:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4188:1:1",
																							"nodeType": "YulLiteral",
																							"src": "4188:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4174:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4174:3:1"
																					},
																					"nativeSrc": "4174:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4174:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4165:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4165:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4203:5:1",
																				"nodeType": "YulLeave",
																				"src": "4203:5:1"
																			}
																		]
																	},
																	"nativeSrc": "4088:130:1",
																	"nodeType": "YulCase",
																	"src": "4088:130:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4093:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4093:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4007:4:1",
																"nodeType": "YulIdentifier",
																"src": "4007:4:1"
															},
															"nativeSrc": "4000:218:1",
															"nodeType": "YulSwitch",
															"src": "4000:218:1"
														},
														{
															"body": {
																"nativeSrc": "4316:70:1",
																"nodeType": "YulBlock",
																"src": "4316:70:1",
																"statements": [
																	{
																		"nativeSrc": "4330:28:1",
																		"nodeType": "YulAssignment",
																		"src": "4330:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4343:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "4343:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4349:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4349:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4339:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4339:3:1"
																			},
																			"nativeSrc": "4339:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4339:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4330:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4330:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4371:5:1",
																		"nodeType": "YulLeave",
																		"src": "4371:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4240:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "4240:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4246:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4246:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4237:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4237:2:1"
																				},
																				"nativeSrc": "4237:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4237:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4254:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4254:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4264:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4264:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4251:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4251:2:1"
																				},
																				"nativeSrc": "4251:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4251:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4233:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:1"
																		},
																		"nativeSrc": "4233:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4233:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4277:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "4277:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4283:3:1",
																						"nodeType": "YulLiteral",
																						"src": "4283:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4274:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4274:2:1"
																				},
																				"nativeSrc": "4274:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4274:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4292:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4292:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4302:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4302:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4289:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4289:2:1"
																				},
																				"nativeSrc": "4289:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4289:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4270:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:1"
																		},
																		"nativeSrc": "4270:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4230:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4230:2:1"
																},
																"nativeSrc": "4230:77:1",
																"nodeType": "YulFunctionCall",
																"src": "4230:77:1"
															},
															"nativeSrc": "4227:159:1",
															"nodeType": "YulIf",
															"src": "4227:159:1"
														},
														{
															"nativeSrc": "4395:57:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4395:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4437:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4437:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4443:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4443:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4418:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4418:18:1"
																},
																"nativeSrc": "4418:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4418:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4399:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4399:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4408:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4408:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4497:22:1",
																"nodeType": "YulBlock",
																"src": "4497:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4499:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4499:16:1"
																			},
																			"nativeSrc": "4499:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4499:18:1"
																		},
																		"nativeSrc": "4499:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4499:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4467:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4467:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:1"
																				},
																				"nativeSrc": "4480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4480:6:1"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4488:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4488:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4476:3:1"
																		},
																		"nativeSrc": "4476:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4476:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4464:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4464:2:1"
																},
																"nativeSrc": "4464:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4464:32:1"
															},
															"nativeSrc": "4461:58:1",
															"nodeType": "YulIf",
															"src": "4461:58:1"
														},
														{
															"nativeSrc": "4528:29:1",
															"nodeType": "YulAssignment",
															"src": "4528:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4541:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4541:7:1"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4550:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4550:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4537:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:1"
																},
																"nativeSrc": "4537:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4537:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4528:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4528:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3757:806:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3787:4:1",
														"nodeType": "YulTypedName",
														"src": "3787:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3793:8:1",
														"nodeType": "YulTypedName",
														"src": "3793:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3806:5:1",
														"nodeType": "YulTypedName",
														"src": "3806:5:1",
														"type": ""
													}
												],
												"src": "3757:806:1"
											},
											{
												"body": {
													"nativeSrc": "4636:72:1",
													"nodeType": "YulBlock",
													"src": "4636:72:1",
													"statements": [
														{
															"nativeSrc": "4646:56:1",
															"nodeType": "YulAssignment",
															"src": "4646:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4676:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4676:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4686:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "4686:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4696:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4696:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4682:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:1"
																		},
																		"nativeSrc": "4682:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4655:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "4655:20:1"
																},
																"nativeSrc": "4655:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4655:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4646:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4646:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4568:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4607:4:1",
														"nodeType": "YulTypedName",
														"src": "4607:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4613:8:1",
														"nodeType": "YulTypedName",
														"src": "4613:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4626:5:1",
														"nodeType": "YulTypedName",
														"src": "4626:5:1",
														"type": ""
													}
												],
												"src": "4568:140:1"
											},
											{
												"body": {
													"nativeSrc": "4765:116:1",
													"nodeType": "YulBlock",
													"src": "4765:116:1",
													"statements": [
														{
															"nativeSrc": "4775:20:1",
															"nodeType": "YulAssignment",
															"src": "4775:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4790:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4790:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4793:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4793:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4786:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:1"
																},
																"nativeSrc": "4786:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4786:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4775:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4775:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4853:22:1",
																"nodeType": "YulBlock",
																"src": "4853:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4855:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4855:16:1"
																			},
																			"nativeSrc": "4855:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4855:18:1"
																		},
																		"nativeSrc": "4855:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4855:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4824:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4824:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4817:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4817:6:1"
																				},
																				"nativeSrc": "4817:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4817:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4831:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4831:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4838:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4838:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4847:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4847:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4834:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4834:3:1"
																						},
																						"nativeSrc": "4834:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4834:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4828:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4828:2:1"
																				},
																				"nativeSrc": "4828:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4828:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4814:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:2:1"
																		},
																		"nativeSrc": "4814:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:1"
																},
																"nativeSrc": "4807:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4807:45:1"
															},
															"nativeSrc": "4804:71:1",
															"nodeType": "YulIf",
															"src": "4804:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4713:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4744:1:1",
														"nodeType": "YulTypedName",
														"src": "4744:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4747:1:1",
														"nodeType": "YulTypedName",
														"src": "4747:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4753:7:1",
														"nodeType": "YulTypedName",
														"src": "4753:7:1",
														"type": ""
													}
												],
												"src": "4713:168:1"
											},
											{
												"body": {
													"nativeSrc": "4934:77:1",
													"nodeType": "YulBlock",
													"src": "4934:77:1",
													"statements": [
														{
															"nativeSrc": "4944:16:1",
															"nodeType": "YulAssignment",
															"src": "4944:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4955:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4955:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4958:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4958:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4951:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4951:3:1"
																},
																"nativeSrc": "4951:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4951:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4944:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4983:22:1",
																"nodeType": "YulBlock",
																"src": "4983:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4985:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4985:16:1"
																			},
																			"nativeSrc": "4985:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4985:18:1"
																		},
																		"nativeSrc": "4985:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4985:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4975:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4978:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4972:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4972:2:1"
																},
																"nativeSrc": "4972:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4972:10:1"
															},
															"nativeSrc": "4969:36:1",
															"nodeType": "YulIf",
															"src": "4969:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4886:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4917:1:1",
														"nodeType": "YulTypedName",
														"src": "4917:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4920:1:1",
														"nodeType": "YulTypedName",
														"src": "4920:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4926:3:1",
														"nodeType": "YulTypedName",
														"src": "4926:3:1",
														"type": ""
													}
												],
												"src": "4886:125:1"
											},
											{
												"body": {
													"nativeSrc": "5173:188:1",
													"nodeType": "YulBlock",
													"src": "5173:188:1",
													"statements": [
														{
															"nativeSrc": "5183:26:1",
															"nodeType": "YulAssignment",
															"src": "5183:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5195:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5191:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5191:3:1"
																},
																"nativeSrc": "5191:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5191:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5183:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5183:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5225:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5225:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5240:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5240:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5256:3:1",
																								"nodeType": "YulLiteral",
																								"src": "5256:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5261:1:1",
																								"nodeType": "YulLiteral",
																								"src": "5261:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5252:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5252:3:1"
																						},
																						"nativeSrc": "5252:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5252:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5265:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5265:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5248:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5248:3:1"
																				},
																				"nativeSrc": "5248:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5248:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5236:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5236:3:1"
																		},
																		"nativeSrc": "5236:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5236:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:1"
																},
																"nativeSrc": "5218:51:1",
																"nodeType": "YulFunctionCall",
																"src": "5218:51:1"
															},
															"nativeSrc": "5218:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "5218:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5289:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5300:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5300:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5285:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5285:3:1"
																		},
																		"nativeSrc": "5285:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5285:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5305:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5305:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:1"
																},
																"nativeSrc": "5278:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5278:34:1"
															},
															"nativeSrc": "5278:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5278:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5332:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5332:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5343:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5343:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5328:3:1"
																		},
																		"nativeSrc": "5328:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5328:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5348:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5348:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5321:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5321:6:1"
																},
																"nativeSrc": "5321:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5321:34:1"
															},
															"nativeSrc": "5321:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5321:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5016:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:1",
														"nodeType": "YulTypedName",
														"src": "5126:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5137:6:1",
														"nodeType": "YulTypedName",
														"src": "5137:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5145:6:1",
														"nodeType": "YulTypedName",
														"src": "5145:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5153:6:1",
														"nodeType": "YulTypedName",
														"src": "5153:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5164:4:1",
														"nodeType": "YulTypedName",
														"src": "5164:4:1",
														"type": ""
													}
												],
												"src": "5016:345:1"
											},
											{
												"body": {
													"nativeSrc": "5467:76:1",
													"nodeType": "YulBlock",
													"src": "5467:76:1",
													"statements": [
														{
															"nativeSrc": "5477:26:1",
															"nodeType": "YulAssignment",
															"src": "5477:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5489:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5489:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5500:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5500:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5485:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5485:3:1"
																},
																"nativeSrc": "5485:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5485:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5477:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5477:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5519:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5519:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5530:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5530:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5512:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:1"
																},
																"nativeSrc": "5512:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5512:25:1"
															},
															"nativeSrc": "5512:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5512:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5366:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5436:9:1",
														"nodeType": "YulTypedName",
														"src": "5436:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5447:6:1",
														"nodeType": "YulTypedName",
														"src": "5447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5458:4:1",
														"nodeType": "YulTypedName",
														"src": "5458:4:1",
														"type": ""
													}
												],
												"src": "5366:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000e4c38038062000e4c8339810160408190526200003391620002bf565b806040518060400160405280600b81526020016a11dbd89b1a5b8811d95b1d60aa1b8152506040518060400160405280600481526020016311d1531560e21b81525081600390816200008691906200038c565b5060046200009582826200038c565b5050506001600160a01b038116620000c757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b620000d28162000103565b50620000fc33620000e66012600a62000567565b620000f6906301406f4062000577565b62000154565b50620005a7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166200017f5760405163ec442f0560e01b81525f6004820152602401620000be565b6200018c5f838362000190565b5050565b6001600160a01b038316620001be578060025f828254620001b2919062000591565b90915550620002309050565b6001600160a01b0383165f9081526020819052604090205481811015620002125760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000be565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166200024e576002805482900390556200026c565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002b291815260200190565b60405180910390a3505050565b5f60208284031215620002d0575f80fd5b81516001600160a01b0381168114620002e7575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200031757607f821691505b6020821081036200033657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200038757805f5260205f20601f840160051c81016020851015620003635750805b601f840160051c820191505b8181101562000384575f81556001016200036f565b50505b505050565b81516001600160401b03811115620003a857620003a8620002ee565b620003c081620003b9845462000302565b846200033c565b602080601f831160018114620003f6575f8415620003de5750858301515b5f19600386901b1c1916600185901b17855562000450565b5f85815260208120601f198616915b82811015620004265788860151825594840194600190910190840162000405565b50858210156200044457878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620004ac57815f190482111562000490576200049062000458565b808516156200049e57918102915b93841c939080029062000471565b509250929050565b5f82620004c45750600162000561565b81620004d257505f62000561565b8160018114620004eb5760028114620004f65762000516565b600191505062000561565b60ff8411156200050a576200050a62000458565b50506001821b62000561565b5060208310610133831016604e8410600b84101617156200053b575081810a62000561565b6200054783836200046c565b805f19048211156200055d576200055d62000458565b0290505b92915050565b5f620002e760ff841683620004b4565b808202811582820484141762000561576200056162000458565b8082018082111562000561576200056162000458565b61089780620005b55f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106f1565b60405180910390f35b6101006100fb366004610758565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610780565b6102b3565b604051601281526020016100e4565b610157610152366004610758565b6102d6565b005b6101146101673660046107b9565b6001600160a01b03165f9081526020819052604090205490565b6101576102ec565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102ff565b6101006101ba366004610758565b61030e565b6101146101cd3660046107d9565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101576102053660046107b9565b61031b565b6060600380546102199061080a565b80601f01602080910402602001604051908101604052809291908181526020018280546102459061080a565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561035d565b60019150505b92915050565b5f336102c085828561036f565b6102cb8585856103ea565b506001949350505050565b6102de610447565b6102e88282610474565b5050565b6102f4610447565b6102fd5f6104a8565b565b6060600480546102199061080a565b5f336102a78185856103ea565b610323610447565b6001600160a01b03811661035157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61035a816104a8565b50565b61036a83838360016104f9565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103e457818110156103d657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b6103e484848484035f6104f9565b50505050565b6001600160a01b03831661041357604051634b637e8f60e11b81525f6004820152602401610348565b6001600160a01b03821661043c5760405163ec442f0560e01b81525f6004820152602401610348565b61036a8383836105cb565b6005546001600160a01b031633146102fd5760405163118cdaa760e01b8152336004820152602401610348565b6001600160a01b03821661049d5760405163ec442f0560e01b81525f6004820152602401610348565b6102e85f83836105cb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105225760405163e602df0560e01b81525f6004820152602401610348565b6001600160a01b03831661054b57604051634a1406b160e11b81525f6004820152602401610348565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f5578060025f8282546105ea9190610842565b909155506106659050565b6001600160a01b0383165f90815260208190526040902054818110156106475760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166106815760028054829003905561069f565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e491815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561071d57858101830151858201604001528201610701565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610753575f80fd5b919050565b5f8060408385031215610769575f80fd5b6107728361073d565b946020939093013593505050565b5f805f60608486031215610792575f80fd5b61079b8461073d565b92506107a96020850161073d565b9150604084013590509250925092565b5f602082840312156107c9575f80fd5b6107d28261073d565b9392505050565b5f80604083850312156107ea575f80fd5b6107f38361073d565b91506108016020840161073d565b90509250929050565b600181811c9082168061081e57607f821691505b60208210810361083c57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220771682e3e478644958c395a80f43eb2e8ae267695a89a6c9a522ee821687c50064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE4C CODESIZE SUB DUP1 PUSH3 0xE4C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x2BF JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x11DBD89B1A5B8811D95B1D PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x11D15315 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x86 SWAP2 SWAP1 PUSH3 0x38C JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x95 DUP3 DUP3 PUSH3 0x38C JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD2 DUP2 PUSH3 0x103 JUMP JUMPDEST POP PUSH3 0xFC CALLER PUSH3 0xE6 PUSH1 0x12 PUSH1 0xA PUSH3 0x567 JUMP JUMPDEST PUSH3 0xF6 SWAP1 PUSH4 0x1406F40 PUSH3 0x577 JUMP JUMPDEST PUSH3 0x154 JUMP JUMPDEST POP PUSH3 0x5A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x17F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST PUSH3 0x18C PUSH0 DUP4 DUP4 PUSH3 0x190 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1BE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x1B2 SWAP2 SWAP1 PUSH3 0x591 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x230 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x212 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x24E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x26C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2B2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x317 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x336 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x387 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x363 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x384 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x36F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3A8 JUMPI PUSH3 0x3A8 PUSH3 0x2EE JUMP JUMPDEST PUSH3 0x3C0 DUP2 PUSH3 0x3B9 DUP5 SLOAD PUSH3 0x302 JUMP JUMPDEST DUP5 PUSH3 0x33C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3F6 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3DE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x450 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x426 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x405 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x444 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x4AC JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x490 JUMPI PUSH3 0x490 PUSH3 0x458 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x49E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x471 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x4C4 JUMPI POP PUSH1 0x1 PUSH3 0x561 JUMP JUMPDEST DUP2 PUSH3 0x4D2 JUMPI POP PUSH0 PUSH3 0x561 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4EB JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4F6 JUMPI PUSH3 0x516 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x561 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x50A JUMPI PUSH3 0x50A PUSH3 0x458 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x561 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x53B JUMPI POP DUP2 DUP2 EXP PUSH3 0x561 JUMP JUMPDEST PUSH3 0x547 DUP4 DUP4 PUSH3 0x46C JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x55D JUMPI PUSH3 0x55D PUSH3 0x458 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E7 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x4B4 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x561 JUMPI PUSH3 0x561 PUSH3 0x458 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x561 JUMPI PUSH3 0x561 PUSH3 0x458 JUMP JUMPDEST PUSH2 0x897 DUP1 PUSH3 0x5B5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x780 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x80A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x80A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2E8 DUP3 DUP3 PUSH2 0x474 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2FD PUSH0 PUSH2 0x4A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x323 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x4A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3E4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2E8 PUSH0 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x665 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x681 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x71D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x701 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x769 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x772 DUP4 PUSH2 0x73D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP5 PUSH2 0x73D JUMP JUMPDEST SWAP3 POP PUSH2 0x7A9 PUSH1 0x20 DUP6 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D2 DUP3 PUSH2 0x73D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP4 PUSH2 0x73D JUMP JUMPDEST SWAP2 POP PUSH2 0x801 PUSH1 0x20 DUP5 ADD PUSH2 0x73D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x81E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x83C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x1682E3E478644958C395A80F43EB2E8AE267695A89A6C9A5 0x22 0xEE DUP3 AND DUP8 0xC5 STOP PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "25796:324:0:-:0;;;25841:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25930:12;12882:116;;;;;;;;;;;;;-1:-1:-1;;;12882:116:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12882:116:0;;;12957:5;12949;:13;;;;;;:::i;:::-;-1:-1:-1;12973:7:0;:17;12983:7;12973;:17;:::i;:::-;-1:-1:-1;;;;;;;;23740:26:0;;23736:97;;23790:31;;-1:-1:-1;;;23790:31:0;;23818:1;23790:31;;;3142:51:1;3115:18;;23790:31:0;;;;;;;;23736:97;23843:32;23862:12;23843:18;:32::i;:::-;-1:-1:-1;25960:46:0::2;25966:10;25989:16;14095:2:::0;25989::::2;:16;:::i;:::-;25978:27;::::0;:8:::2;:27;:::i;:::-;25960:5;:46::i;:::-;25841:173:::0;25796:324;;25435:191;25528:6;;;-1:-1:-1;;;;;25545:17:0;;;-1:-1:-1;;;;;;25545:17:0;;;;;;;25578:40;;25528:6;;;25545:17;25528:6;;25578:40;;25509:16;;25578:40;25498:128;25435:191;:::o;18915:213::-;-1:-1:-1;;;;;18986:21:0;;18982:93;;19031:32;;-1:-1:-1;;;19031:32:0;;19060:1;19031:32;;;3142:51:1;3115:18;;19031:32:0;2996:203:1;18982:93:0;19085:35;19101:1;19105:7;19114:5;19085:7;:35::i;:::-;18915:213;;:::o;17427:1135::-;-1:-1:-1;;;;;17517:18:0;;17513:552;;17671:5;17655:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17513:552:0;;-1:-1:-1;17513:552:0;;-1:-1:-1;;;;;17731:15:0;;17709:19;17731:15;;;;;;;;;;;17765:19;;;17761:117;;;17812:50;;-1:-1:-1;;;17812:50:0;;-1:-1:-1;;;;;5236:32:1;;17812:50:0;;;5218:51:1;5285:18;;;5278:34;;;5328:18;;;5321:34;;;5191:18;;17812:50:0;5016:345:1;17761:117:0;-1:-1:-1;;;;;18001:15:0;;:9;:15;;;;;;;;;;18019:19;;;;18001:37;;17513:552;-1:-1:-1;;;;;18081:16:0;;18077:435;;18247:12;:21;;;;;;;18077:435;;;-1:-1:-1;;;;;18463:13:0;;:9;:13;;;;;;;;;;:22;;;;;;18077:435;18544:2;-1:-1:-1;;;;;18529:25:0;18538:4;-1:-1:-1;;;;;18529:25:0;;18548:5;18529:25;;;;5512::1;;5500:2;5485:18;;5366:177;18529:25:0;;;;;;;;17427:1135;;;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:1;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:1;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:1;;;2841:26;2792:89;-1:-1:-1;;1603:1:1;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:1;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:1;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;3204:127::-;3265:10;3260:3;3256:20;3253:1;3246:31;3296:4;3293:1;3286:15;3320:4;3317:1;3310:15;3336:416;3425:1;3462:5;3425:1;3476:270;3497:7;3487:8;3484:21;3476:270;;;3556:4;3552:1;3548:6;3544:17;3538:4;3535:27;3532:53;;;3565:18;;:::i;:::-;3615:7;3605:8;3601:22;3598:55;;;3635:16;;;;3598:55;3714:22;;;;3674:15;;;;3476:270;;;3480:3;3336:416;;;;;:::o;3757:806::-;3806:5;3836:8;3826:80;;-1:-1:-1;3877:1:1;3891:5;;3826:80;3925:4;3915:76;;-1:-1:-1;3962:1:1;3976:5;;3915:76;4007:4;4025:1;4020:59;;;;4093:1;4088:130;;;;4000:218;;4020:59;4050:1;4041:10;;4064:5;;;4088:130;4125:3;4115:8;4112:17;4109:43;;;4132:18;;:::i;:::-;-1:-1:-1;;4188:1:1;4174:16;;4203:5;;4000:218;;4302:2;4292:8;4289:16;4283:3;4277:4;4274:13;4270:36;4264:2;4254:8;4251:16;4246:2;4240:4;4237:12;4233:35;4230:77;4227:159;;;-1:-1:-1;4339:19:1;;;4371:5;;4227:159;4418:34;4443:8;4437:4;4418:34;:::i;:::-;4488:6;4484:1;4480:6;4476:19;4467:7;4464:32;4461:58;;;4499:18;;:::i;:::-;4537:20;;-1:-1:-1;3757:806:1;;;;;:::o;4568:140::-;4626:5;4655:47;4696:4;4686:8;4682:19;4676:4;4655:47;:::i;4713:168::-;4786:9;;;4817;;4834:15;;;4828:22;;4814:37;4804:71;;4855:18;;:::i;4886:125::-;4951:9;;;4972:10;;;4969:36;;;4985:18;;:::i;5366:177::-;25796:324:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 861,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 1273,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 1095,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 1140,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 879,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 1192,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1002,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1483,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 666,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_961": {
									"entryPoint": 726,
									"id": 961,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 522,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 748,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 767,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 691,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 795,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 782,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3523:1",
										"nodeType": "YulBlock",
										"src": "0:3523:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:116:1",
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:39:1",
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nativeSrc": "2051:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nativeSrc": "2192:102:1",
													"nodeType": "YulBlock",
													"src": "2192:102:1",
													"statements": [
														{
															"nativeSrc": "2202:26:1",
															"nodeType": "YulAssignment",
															"src": "2202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:1"
																},
																"nativeSrc": "2210:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2275:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2280:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2271:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:1"
																						},
																						"nativeSrc": "2271:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2284:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2267:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:1"
																				},
																				"nativeSrc": "2267:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nativeSrc": "2255:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:1"
																},
																"nativeSrc": "2237:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2237:51:1"
															},
															"nativeSrc": "2237:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2091:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:1",
														"nodeType": "YulTypedName",
														"src": "2161:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:1",
														"nodeType": "YulTypedName",
														"src": "2172:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:1",
														"nodeType": "YulTypedName",
														"src": "2183:4:1",
														"type": ""
													}
												],
												"src": "2091:203:1"
											},
											{
												"body": {
													"nativeSrc": "2386:173:1",
													"nodeType": "YulBlock",
													"src": "2386:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2432:16:1",
																"nodeType": "YulBlock",
																"src": "2432:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2441:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2444:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2434:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:1"
																			},
																			"nativeSrc": "2434:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:1"
																		},
																		"nativeSrc": "2434:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2407:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2416:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nativeSrc": "2403:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2428:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:1"
																},
																"nativeSrc": "2399:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2399:32:1"
															},
															"nativeSrc": "2396:52:1",
															"nodeType": "YulIf",
															"src": "2396:52:1"
														},
														{
															"nativeSrc": "2457:39:1",
															"nodeType": "YulAssignment",
															"src": "2457:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2486:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2467:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:1"
																},
																"nativeSrc": "2467:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																}
															]
														},
														{
															"nativeSrc": "2505:48:1",
															"nodeType": "YulAssignment",
															"src": "2505:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2534:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nativeSrc": "2534:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2515:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:1"
																},
																"nativeSrc": "2515:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2515:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2505:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2299:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2344:9:1",
														"nodeType": "YulTypedName",
														"src": "2344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2355:7:1",
														"nodeType": "YulTypedName",
														"src": "2355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2367:6:1",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2375:6:1",
														"nodeType": "YulTypedName",
														"src": "2375:6:1",
														"type": ""
													}
												],
												"src": "2299:260:1"
											},
											{
												"body": {
													"nativeSrc": "2619:325:1",
													"nodeType": "YulBlock",
													"src": "2619:325:1",
													"statements": [
														{
															"nativeSrc": "2629:22:1",
															"nodeType": "YulAssignment",
															"src": "2629:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2643:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2646:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2639:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:1"
																},
																"nativeSrc": "2639:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2639:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2629:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:1"
																}
															]
														},
														{
															"nativeSrc": "2660:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2690:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2686:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:1"
																},
																"nativeSrc": "2686:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2686:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2664:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2737:31:1",
																"nodeType": "YulBlock",
																"src": "2737:31:1",
																"statements": [
																	{
																		"nativeSrc": "2739:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2739:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2753:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2761:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2749:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:1"
																			},
																			"nativeSrc": "2749:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2717:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2710:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:1"
																},
																"nativeSrc": "2710:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2710:26:1"
															},
															"nativeSrc": "2707:61:1",
															"nodeType": "YulIf",
															"src": "2707:61:1"
														},
														{
															"body": {
																"nativeSrc": "2827:111:1",
																"nodeType": "YulBlock",
																"src": "2827:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2848:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2855:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2860:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2851:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:1"
																					},
																					"nativeSrc": "2851:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2841:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:1"
																			},
																			"nativeSrc": "2841:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:1"
																		},
																		"nativeSrc": "2841:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2892:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2895:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2885:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:1"
																			},
																			"nativeSrc": "2885:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:1"
																		},
																		"nativeSrc": "2885:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2920:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2923:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2913:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:1"
																			},
																			"nativeSrc": "2913:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:1"
																		},
																		"nativeSrc": "2913:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2783:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2806:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2803:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:1"
																		},
																		"nativeSrc": "2803:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:38:1"
															},
															"nativeSrc": "2777:161:1",
															"nodeType": "YulIf",
															"src": "2777:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2564:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2599:4:1",
														"nodeType": "YulTypedName",
														"src": "2599:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2608:6:1",
														"nodeType": "YulTypedName",
														"src": "2608:6:1",
														"type": ""
													}
												],
												"src": "2564:380:1"
											},
											{
												"body": {
													"nativeSrc": "3106:188:1",
													"nodeType": "YulBlock",
													"src": "3106:188:1",
													"statements": [
														{
															"nativeSrc": "3116:26:1",
															"nodeType": "YulAssignment",
															"src": "3116:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3128:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3128:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3139:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3139:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3124:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:1"
																},
																"nativeSrc": "3124:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3124:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3116:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3116:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3158:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3158:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3173:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3173:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3189:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3189:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3194:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3194:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3185:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3185:3:1"
																						},
																						"nativeSrc": "3185:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3185:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3198:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3198:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3181:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3181:3:1"
																				},
																				"nativeSrc": "3181:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3181:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3169:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3169:3:1"
																		},
																		"nativeSrc": "3169:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3151:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3151:6:1"
																},
																"nativeSrc": "3151:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3151:51:1"
															},
															"nativeSrc": "3151:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3151:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3218:3:1"
																		},
																		"nativeSrc": "3218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3218:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3211:6:1"
																},
																"nativeSrc": "3211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3211:34:1"
															},
															"nativeSrc": "3211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:1"
																		},
																		"nativeSrc": "3261:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3281:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3281:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:1"
																},
																"nativeSrc": "3254:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3254:34:1"
															},
															"nativeSrc": "3254:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3254:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2949:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3059:9:1",
														"nodeType": "YulTypedName",
														"src": "3059:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3070:6:1",
														"nodeType": "YulTypedName",
														"src": "3070:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3078:6:1",
														"nodeType": "YulTypedName",
														"src": "3078:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3086:6:1",
														"nodeType": "YulTypedName",
														"src": "3086:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3097:4:1",
														"nodeType": "YulTypedName",
														"src": "3097:4:1",
														"type": ""
													}
												],
												"src": "2949:345:1"
											},
											{
												"body": {
													"nativeSrc": "3347:174:1",
													"nodeType": "YulBlock",
													"src": "3347:174:1",
													"statements": [
														{
															"nativeSrc": "3357:16:1",
															"nodeType": "YulAssignment",
															"src": "3357:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3368:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3368:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3371:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3371:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:1"
																},
																"nativeSrc": "3364:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3364:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3357:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3404:111:1",
																"nodeType": "YulBlock",
																"src": "3404:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3425:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3425:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3432:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3432:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3437:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3437:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3428:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3428:3:1"
																					},
																					"nativeSrc": "3428:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3428:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3418:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3418:6:1"
																			},
																			"nativeSrc": "3418:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:31:1"
																		},
																		"nativeSrc": "3418:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3469:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3472:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3472:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3462:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3462:6:1"
																			},
																			"nativeSrc": "3462:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3462:15:1"
																		},
																		"nativeSrc": "3462:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3462:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3497:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3500:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3500:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3490:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:1"
																			},
																			"nativeSrc": "3490:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3490:15:1"
																		},
																		"nativeSrc": "3490:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3388:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3388:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3391:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3391:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3385:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:2:1"
																},
																"nativeSrc": "3385:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3385:10:1"
															},
															"nativeSrc": "3382:133:1",
															"nodeType": "YulIf",
															"src": "3382:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3299:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3330:1:1",
														"nodeType": "YulTypedName",
														"src": "3330:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3333:1:1",
														"nodeType": "YulTypedName",
														"src": "3333:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3339:3:1",
														"nodeType": "YulTypedName",
														"src": "3339:3:1",
														"type": ""
													}
												],
												"src": "3299:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106f1565b60405180910390f35b6101006100fb366004610758565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610780565b6102b3565b604051601281526020016100e4565b610157610152366004610758565b6102d6565b005b6101146101673660046107b9565b6001600160a01b03165f9081526020819052604090205490565b6101576102ec565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102ff565b6101006101ba366004610758565b61030e565b6101146101cd3660046107d9565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101576102053660046107b9565b61031b565b6060600380546102199061080a565b80601f01602080910402602001604051908101604052809291908181526020018280546102459061080a565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561035d565b60019150505b92915050565b5f336102c085828561036f565b6102cb8585856103ea565b506001949350505050565b6102de610447565b6102e88282610474565b5050565b6102f4610447565b6102fd5f6104a8565b565b6060600480546102199061080a565b5f336102a78185856103ea565b610323610447565b6001600160a01b03811661035157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61035a816104a8565b50565b61036a83838360016104f9565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103e457818110156103d657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b6103e484848484035f6104f9565b50505050565b6001600160a01b03831661041357604051634b637e8f60e11b81525f6004820152602401610348565b6001600160a01b03821661043c5760405163ec442f0560e01b81525f6004820152602401610348565b61036a8383836105cb565b6005546001600160a01b031633146102fd5760405163118cdaa760e01b8152336004820152602401610348565b6001600160a01b03821661049d5760405163ec442f0560e01b81525f6004820152602401610348565b6102e85f83836105cb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105225760405163e602df0560e01b81525f6004820152602401610348565b6001600160a01b03831661054b57604051634a1406b160e11b81525f6004820152602401610348565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f5578060025f8282546105ea9190610842565b909155506106659050565b6001600160a01b0383165f90815260208190526040902054818110156106475760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166106815760028054829003905561069f565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e491815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561071d57858101830151858201604001528201610701565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610753575f80fd5b919050565b5f8060408385031215610769575f80fd5b6107728361073d565b946020939093013593505050565b5f805f60608486031215610792575f80fd5b61079b8461073d565b92506107a96020850161073d565b9150604084013590509250925092565b5f602082840312156107c9575f80fd5b6107d28261073d565b9392505050565b5f80604083850312156107ea575f80fd5b6107f38361073d565b91506108016020840161073d565b90509250929050565b600181811c9082168061081e57607f821691505b60208210810361083c57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220771682e3e478644958c395a80f43eb2e8ae267695a89a6c9a522ee821687c50064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x780 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x80A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x80A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2E8 DUP3 DUP3 PUSH2 0x474 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x2FD PUSH0 PUSH2 0x4A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x323 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x4A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3E4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x3E4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2E8 PUSH0 DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x665 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x681 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x71D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x701 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x769 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x772 DUP4 PUSH2 0x73D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP5 PUSH2 0x73D JUMP JUMPDEST SWAP3 POP PUSH2 0x7A9 PUSH1 0x20 DUP6 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D2 DUP3 PUSH2 0x73D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP4 PUSH2 0x73D JUMP JUMPDEST SWAP2 POP PUSH2 0x801 PUSH1 0x20 DUP5 ADD PUSH2 0x73D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x81E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x83C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x1682E3E478644958C395A80F43EB2E8AE267695A89A6C9A5 0x22 0xEE DUP3 AND DUP8 0xC5 STOP PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "25796:324:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13068:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15361:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;15361:190:0;1004:187:1;14170:99:0;14249:12;;14170:99;;;1342:25:1;;;1330:2;1315:18;14170:99:0;1196:177:1;16161:249:0;;;;;;:::i;:::-;;:::i;14021:84::-;;;14095:2;1853:36:1;;1841:2;1826:18;14021:84:0;1711:184:1;26022:95:0;;;;;;:::i;:::-;;:::i;:::-;;14332:118;;;;;;:::i;:::-;-1:-1:-1;;;;;14424:18:0;14397:7;14424:18;;;;;;;;;;;;14332:118;24797:103;;;:::i;24122:87::-;24195:6;;24122:87;;-1:-1:-1;;;;;24195:6:0;;;2237:51:1;;2225:2;2210:18;24122:87:0;2091:203:1;13278:95:0;;;:::i;14655:182::-;;;;;;:::i;:::-;;:::i;14900:142::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15007:18:0;;;14980:7;15007:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14900:142;25055:220;;;;;;:::i;:::-;;:::i;13068:91::-;13113:13;13146:5;13139:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13068:91;:::o;15361:190::-;15434:4;4435:10;15490:31;4435:10;15506:7;15515:5;15490:8;:31::i;:::-;15539:4;15532:11;;;15361:190;;;;;:::o;16161:249::-;16248:4;4435:10;16306:37;16322:4;4435:10;16337:5;16306:15;:37::i;:::-;16354:26;16364:4;16370:2;16374:5;16354:9;:26::i;:::-;-1:-1:-1;16398:4:0;;16161:249;-1:-1:-1;;;;16161:249:0:o;26022:95::-;24008:13;:11;:13::i;:::-;26092:17:::1;26098:2;26102:6;26092:5;:17::i;:::-;26022:95:::0;;:::o;24797:103::-;24008:13;:11;:13::i;:::-;24862:30:::1;24889:1;24862:18;:30::i;:::-;24797:103::o:0;13278:95::-;13325:13;13358:7;13351:14;;;;;:::i;14655:182::-;14724:4;4435:10;14780:27;4435:10;14797:2;14801:5;14780:9;:27::i;25055:220::-;24008:13;:11;:13::i;:::-;-1:-1:-1;;;;;25140:22:0;::::1;25136:93;;25186:31;::::0;-1:-1:-1;;;25186:31:0;;25214:1:::1;25186:31;::::0;::::1;2237:51:1::0;2210:18;;25186:31:0::1;;;;;;;;25136:93;25239:28;25258:8;25239:18;:28::i;:::-;25055:220:::0;:::o;20220:130::-;20305:37;20314:5;20321:7;20330:5;20337:4;20305:8;:37::i;:::-;20220:130;;;:::o;21952:487::-;-1:-1:-1;;;;;15007:18:0;;;22052:24;15007:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;22119:37:0;;22115:317;;22196:5;22177:16;:24;22173:132;;;22229:60;;-1:-1:-1;;;22229:60:0;;-1:-1:-1;;;;;3169:32:1;;22229:60:0;;;3151:51:1;3218:18;;;3211:34;;;3261:18;;;3254:34;;;3124:18;;22229:60:0;2949:345:1;22173:132:0;22348:57;22357:5;22364:7;22392:5;22373:16;:24;22399:5;22348:8;:57::i;:::-;22041:398;21952:487;;;:::o;16795:308::-;-1:-1:-1;;;;;16879:18:0;;16875:88;;16921:30;;-1:-1:-1;;;16921:30:0;;16948:1;16921:30;;;2237:51:1;2210:18;;16921:30:0;2091:203:1;16875:88:0;-1:-1:-1;;;;;16977:16:0;;16973:88;;17017:32;;-1:-1:-1;;;17017:32:0;;17046:1;17017:32;;;2237:51:1;2210:18;;17017:32:0;2091:203:1;16973:88:0;17071:24;17079:4;17085:2;17089:5;17071:7;:24::i;24287:166::-;24195:6;;-1:-1:-1;;;;;24195:6:0;4435:10;24347:23;24343:103;;24394:40;;-1:-1:-1;;;24394:40:0;;4435:10;24394:40;;;2237:51:1;2210:18;;24394:40:0;2091:203:1;18915:213:0;-1:-1:-1;;;;;18986:21:0;;18982:93;;19031:32;;-1:-1:-1;;;19031:32:0;;19060:1;19031:32;;;2237:51:1;2210:18;;19031:32:0;2091:203:1;18982:93:0;19085:35;19101:1;19105:7;19114:5;19085:7;:35::i;25435:191::-;25528:6;;;-1:-1:-1;;;;;25545:17:0;;;-1:-1:-1;;;;;;25545:17:0;;;;;;;25578:40;;25528:6;;;25545:17;25528:6;;25578:40;;25509:16;;25578:40;25498:128;25435:191;:::o;21217:443::-;-1:-1:-1;;;;;21330:19:0;;21326:91;;21373:32;;-1:-1:-1;;;21373:32:0;;21402:1;21373:32;;;2237:51:1;2210:18;;21373:32:0;2091:203:1;21326:91:0;-1:-1:-1;;;;;21431:21:0;;21427:92;;21476:31;;-1:-1:-1;;;21476:31:0;;21504:1;21476:31;;;2237:51:1;2210:18;;21476:31:0;2091:203:1;21427:92:0;-1:-1:-1;;;;;21529:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;21575:78;;;;21626:7;-1:-1:-1;;;;;21610:31:0;21619:5;-1:-1:-1;;;;;21610:31:0;;21635:5;21610:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;21610:31:0;;;;;;;;21217:443;;;;:::o;17427:1135::-;-1:-1:-1;;;;;17517:18:0;;17513:552;;17671:5;17655:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17513:552:0;;-1:-1:-1;17513:552:0;;-1:-1:-1;;;;;17731:15:0;;17709:19;17731:15;;;;;;;;;;;17765:19;;;17761:117;;;17812:50;;-1:-1:-1;;;17812:50:0;;-1:-1:-1;;;;;3169:32:1;;17812:50:0;;;3151:51:1;3218:18;;;3211:34;;;3261:18;;;3254:34;;;3124:18;;17812:50:0;2949:345:1;17761:117:0;-1:-1:-1;;;;;18001:15:0;;:9;:15;;;;;;;;;;18019:19;;;;18001:37;;17513:552;-1:-1:-1;;;;;18081:16:0;;18077:435;;18247:12;:21;;;;;;;18077:435;;;-1:-1:-1;;;;;18463:13:0;;:9;:13;;;;;;;;;;:22;;;;;;18077:435;18544:2;-1:-1:-1;;;;;18529:25:0;18538:4;-1:-1:-1;;;;;18529:25:0;;18548:5;18529:25;;;;1342::1;;1330:2;1315:18;;1196:177;18529:25:0;;;;;;;;17427:1135;;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "439800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25841,
									"end": 26014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25930,
									"end": 25942,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11DBD89B1A5B8811D95B1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "AA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11D15315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12882,
									"end": 12998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12949,
									"end": 12954,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12949,
									"end": 12962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12949,
									"end": 12962,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12973,
									"end": 12980,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12973,
									"end": 12990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12983,
									"end": 12990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12973,
									"end": 12980,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12973,
									"end": 12990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12973,
									"end": 12990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12973,
									"end": 12990,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12973,
									"end": 12990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23740,
									"end": 23766,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23740,
									"end": 23766,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23736,
									"end": 23833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23736,
									"end": 23833,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23818,
									"end": 23819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3193,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23790,
									"end": 23821,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23736,
									"end": 23833,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23736,
									"end": 23833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23843,
									"end": 23875,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23862,
									"end": 23874,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23843,
									"end": 23861,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23843,
									"end": 23875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23843,
									"end": 23875,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23843,
									"end": 23875,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 25960,
									"end": 26006,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25966,
									"end": 25976,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 25989,
									"end": 26005,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 14095,
									"end": 14097,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 25989,
									"end": 25991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 25989,
									"end": 26005,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 25989,
									"end": 26005,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25989,
									"end": 26005,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 25989,
									"end": 26005,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25978,
									"end": 26005,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 25978,
									"end": 26005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25978,
									"end": 25986,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1406F40"
								},
								{
									"begin": 25978,
									"end": 26005,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25978,
									"end": 26005,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25978,
									"end": 26005,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 25978,
									"end": 26005,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25960,
									"end": 25965,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 25960,
									"end": 26006,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25960,
									"end": 26006,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25960,
									"end": 26006,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25841,
									"end": 26014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25435,
									"end": 25626,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 25435,
									"end": 25626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25578,
									"end": 25618,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25578,
									"end": 25618,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25545,
									"end": 25562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25528,
									"end": 25534,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25578,
									"end": 25618,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25578,
									"end": 25618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25509,
									"end": 25525,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25509,
									"end": 25525,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25578,
									"end": 25618,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25498,
									"end": 25626,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25435,
									"end": 25626,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25435,
									"end": 25626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18915,
									"end": 19128,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18915,
									"end": 19128,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18986,
									"end": 19007,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18986,
									"end": 19007,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18982,
									"end": 19075,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18982,
									"end": 19075,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19060,
									"end": 19061,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3193,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 19031,
									"end": 19063,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2996,
									"end": 3199,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18982,
									"end": 19075,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18982,
									"end": 19075,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19085,
									"end": 19120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 19101,
									"end": 19102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19105,
									"end": 19112,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19114,
									"end": 19119,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19085,
									"end": 19092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 19085,
									"end": 19120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19085,
									"end": 19120,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 19085,
									"end": 19120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18915,
									"end": 19128,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18915,
									"end": 19128,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18915,
									"end": 19128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17427,
									"end": 18562,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17427,
									"end": 18562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17517,
									"end": 17535,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17517,
									"end": 17535,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17671,
									"end": 17676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17667,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17655,
									"end": 17667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17655,
									"end": 17676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17655,
									"end": 17676,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17709,
									"end": 17728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17731,
									"end": 17746,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17765,
									"end": 17784,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17765,
									"end": 17784,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17765,
									"end": 17784,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17761,
									"end": 17878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17761,
									"end": 17878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17761,
									"end": 17878,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5236,
									"end": 5268,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5218,
									"end": 5269,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5285,
									"end": 5303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5278,
									"end": 5312,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5278,
									"end": 5312,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5278,
									"end": 5312,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5328,
									"end": 5346,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5328,
									"end": 5346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5328,
									"end": 5346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5355,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5321,
									"end": 5355,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17812,
									"end": 17862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5016,
									"end": 5361,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17761,
									"end": 17878,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17761,
									"end": 17878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18019,
									"end": 18038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18019,
									"end": 18038,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18019,
									"end": 18038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18019,
									"end": 18038,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18001,
									"end": 18038,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17513,
									"end": 18065,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18081,
									"end": 18097,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18081,
									"end": 18097,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18259,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18472,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18476,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18485,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18485,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18485,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18485,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18485,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18463,
									"end": 18485,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 18077,
									"end": 18512,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18544,
									"end": 18546,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18538,
									"end": 18542,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18548,
									"end": 18553,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5512,
									"end": 5537,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5512,
									"end": 5537,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5500,
									"end": 5502,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5485,
									"end": 5503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5543,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18529,
									"end": 18554,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17427,
									"end": 18562,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17427,
									"end": 18562,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17427,
									"end": 18562,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17427,
									"end": 18562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3204,
									"end": 3331,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3204,
									"end": 3331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3260,
									"end": 3263,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3256,
									"end": 3276,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3253,
									"end": 3254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3277,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3300,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3293,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3286,
									"end": 3301,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3320,
									"end": 3324,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3317,
									"end": 3318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3325,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3425,
									"end": 3426,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3462,
									"end": 3467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3425,
									"end": 3426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3495,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3484,
									"end": 3505,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3556,
									"end": 3560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3548,
									"end": 3554,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3561,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3538,
									"end": 3542,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3535,
									"end": 3562,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3585,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3532,
									"end": 3585,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3565,
									"end": 3583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3622,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3605,
									"end": 3613,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3623,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3480,
									"end": 3483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3836,
									"end": 3844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3877,
									"end": 3878,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3891,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3891,
									"end": 3896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3962,
									"end": 3963,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3976,
									"end": 3981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3976,
									"end": 3981,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4007,
									"end": 4011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4025,
									"end": 4026,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4093,
									"end": 4094,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4051,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4125,
									"end": 4128,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4115,
									"end": 4123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4112,
									"end": 4129,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4109,
									"end": 4152,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4109,
									"end": 4152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4109,
									"end": 4152,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4132,
									"end": 4150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4188,
									"end": 4189,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4174,
									"end": 4190,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4174,
									"end": 4190,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4302,
									"end": 4304,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4292,
									"end": 4300,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4289,
									"end": 4305,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4277,
									"end": 4281,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4274,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4306,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4264,
									"end": 4266,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 4254,
									"end": 4262,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4251,
									"end": 4267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4246,
									"end": 4248,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 4240,
									"end": 4244,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4237,
									"end": 4249,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4233,
									"end": 4268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4230,
									"end": 4307,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4339,
									"end": 4358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4358,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4371,
									"end": 4376,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4437,
									"end": 4441,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 4418,
									"end": 4452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4488,
									"end": 4494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4484,
									"end": 4485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4480,
									"end": 4486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4476,
									"end": 4495,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4467,
									"end": 4474,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4496,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4461,
									"end": 4519,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4461,
									"end": 4519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4461,
									"end": 4519,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4499,
									"end": 4517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4537,
									"end": 4557,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4537,
									"end": 4557,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4568,
									"end": 4708,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4568,
									"end": 4708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4626,
									"end": 4631,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4655,
									"end": 4702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 4696,
									"end": 4700,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4686,
									"end": 4694,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4682,
									"end": 4701,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4676,
									"end": 4680,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4655,
									"end": 4702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 4655,
									"end": 4702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4713,
									"end": 4881,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4713,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4786,
									"end": 4795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4786,
									"end": 4795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4786,
									"end": 4795,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4834,
									"end": 4849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4834,
									"end": 4849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4834,
									"end": 4849,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4828,
									"end": 4850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4828,
									"end": 4850,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4814,
									"end": 4851,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4804,
									"end": 4875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4855,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4855,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4855,
									"end": 4873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 5011,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 4886,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4951,
									"end": 4960,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4951,
									"end": 4960,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4951,
									"end": 4960,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4972,
									"end": 4982,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4972,
									"end": 4982,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4972,
									"end": 4982,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 5005,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 5005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4969,
									"end": 5005,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4985,
									"end": 5003,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4985,
									"end": 5003,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4985,
									"end": 5003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5543,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 5366,
									"end": 5543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25796,
									"end": 26120,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220771682e3e478644958c395a80f43eb2e8ae267695a89a6c9a522ee821687c50064736f6c63430008160033",
									".code": [
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25796,
											"end": 26120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13068,
											"end": 13159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13068,
											"end": 13159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15361,
											"end": 15551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15361,
											"end": 15551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14249,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14249,
											"end": 14261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14170,
											"end": 14269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16161,
											"end": 16410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16161,
											"end": 16410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14105,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14021,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14021,
											"end": 14105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14097,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14021,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26022,
											"end": 26117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26022,
											"end": 26117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14332,
											"end": 14450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24797,
											"end": 24900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24122,
											"end": 24209,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24122,
											"end": 24209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24122,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24122,
											"end": 24209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24122,
											"end": 24209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13278,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13278,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13278,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13278,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14655,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14655,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14900,
											"end": 15042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14980,
											"end": 14987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15018,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 15042,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25055,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25055,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13146,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13139,
											"end": 13151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13139,
											"end": 13151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15434,
											"end": 15438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15506,
											"end": 15513,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15515,
											"end": 15520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15490,
											"end": 15521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15521,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15490,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15539,
											"end": 15543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15532,
											"end": 15543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16248,
											"end": 16252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16322,
											"end": 16326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16306,
											"end": 16343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16343,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16306,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16364,
											"end": 16368,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16370,
											"end": 16372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16354,
											"end": 16380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16354,
											"end": 16380,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16354,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16398,
											"end": 16402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16398,
											"end": 16402,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 16410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16161,
											"end": 16410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24008,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24008,
											"end": 24021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 26109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26098,
											"end": 26100,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26102,
											"end": 26108,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 26097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26092,
											"end": 26109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 26109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26092,
											"end": 26109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24797,
											"end": 24900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24008,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24008,
											"end": 24021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24889,
											"end": 24890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24862,
											"end": 24880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24862,
											"end": 24892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24862,
											"end": 24892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24797,
											"end": 24900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13278,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13278,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13338,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13358,
											"end": 13365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13351,
											"end": 13365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13351,
											"end": 13365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13351,
											"end": 13365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14655,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14724,
											"end": 14728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14780,
											"end": 14807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14797,
											"end": 14799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14806,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14780,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14780,
											"end": 14807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24008,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24008,
											"end": 24021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24008,
											"end": 24021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25140,
											"end": 25162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25140,
											"end": 25162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25136,
											"end": 25229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25186,
											"end": 25217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25186,
											"end": 25217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25214,
											"end": 25215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25186,
											"end": 25217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25186,
											"end": 25217,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25136,
											"end": 25229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25136,
											"end": 25229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25258,
											"end": 25266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25239,
											"end": 25267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25239,
											"end": 25267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25239,
											"end": 25267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20220,
											"end": 20350,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20220,
											"end": 20350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20305,
											"end": 20342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20314,
											"end": 20319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20321,
											"end": 20328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20337,
											"end": 20341,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20305,
											"end": 20313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20305,
											"end": 20342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20305,
											"end": 20342,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20305,
											"end": 20342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20220,
											"end": 20350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20220,
											"end": 20350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20220,
											"end": 20350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20220,
											"end": 20350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 22439,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21952,
											"end": 22439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22052,
											"end": 22076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15018,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15025,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22119,
											"end": 22156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22119,
											"end": 22156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22115,
											"end": 22432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22196,
											"end": 22201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22177,
											"end": 22193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22177,
											"end": 22201,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22173,
											"end": 22305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22173,
											"end": 22305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 22173,
											"end": 22305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22229,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2949,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22173,
											"end": 22305,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 22173,
											"end": 22305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22348,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22357,
											"end": 22362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22364,
											"end": 22371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22392,
											"end": 22397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22373,
											"end": 22389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22373,
											"end": 22397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22348,
											"end": 22356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22348,
											"end": 22405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22348,
											"end": 22405,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22348,
											"end": 22405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22041,
											"end": 22439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 22439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 22439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 22439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 22439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16795,
											"end": 17103,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16795,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16879,
											"end": 16897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16879,
											"end": 16897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16875,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16875,
											"end": 16963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16948,
											"end": 16949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16921,
											"end": 16951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16875,
											"end": 16963,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16875,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16977,
											"end": 16993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16977,
											"end": 16993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16973,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16973,
											"end": 17061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17017,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 17061,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16973,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17071,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17079,
											"end": 17083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17085,
											"end": 17087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17089,
											"end": 17094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17071,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17071,
											"end": 17095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24287,
											"end": 24453,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24287,
											"end": 24453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24343,
											"end": 24446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24343,
											"end": 24446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24394,
											"end": 24434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18915,
											"end": 19128,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18915,
											"end": 19128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18986,
											"end": 19007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18986,
											"end": 19007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18982,
											"end": 19075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19060,
											"end": 19061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19031,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18982,
											"end": 19075,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18982,
											"end": 19075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19101,
											"end": 19102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19105,
											"end": 19112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19114,
											"end": 19119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19085,
											"end": 19120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 25435,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25578,
											"end": 25618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25545,
											"end": 25562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25618,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25578,
											"end": 25618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25509,
											"end": 25525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25509,
											"end": 25525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25618,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25498,
											"end": 25626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21660,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21217,
											"end": 21660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21330,
											"end": 21349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21330,
											"end": 21349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21326,
											"end": 21417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 21326,
											"end": 21417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21326,
											"end": 21417,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 21326,
											"end": 21417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21431,
											"end": 21452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21431,
											"end": 21452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21427,
											"end": 21519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21427,
											"end": 21519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21476,
											"end": 21507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21427,
											"end": 21519,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21427,
											"end": 21519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21556,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21564,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21575,
											"end": 21653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21626,
											"end": 21633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21619,
											"end": 21624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21635,
											"end": 21640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21610,
											"end": 21641,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21217,
											"end": 21660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 18562,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17427,
											"end": 18562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17517,
											"end": 17535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17517,
											"end": 17535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17671,
											"end": 17676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17667,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17655,
											"end": 17667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17655,
											"end": 17676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17655,
											"end": 17676,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17709,
											"end": 17728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17731,
											"end": 17746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17765,
											"end": 17784,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17761,
											"end": 17878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17761,
											"end": 17878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17761,
											"end": 17878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17812,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2949,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17761,
											"end": 17878,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17761,
											"end": 17878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18001,
											"end": 18038,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 17513,
											"end": 18065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18081,
											"end": 18097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18081,
											"end": 18097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18268,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 18077,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18548,
											"end": 18553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18554,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 18562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 18562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 18562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 18562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3299,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3432,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3505,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"GobinGelt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"risson@goblingelt.com\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"GoblinGelt\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "GobinGelt.sol:GoblinGelt",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "GobinGelt.sol:GoblinGelt",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "GobinGelt.sol:GoblinGelt",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "GobinGelt.sol:GoblinGelt",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "GobinGelt.sol:GoblinGelt",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "GobinGelt.sol:GoblinGelt",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GobinGelt.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"GobinGelt.sol\":{\"keccak256\":\"0x2f9858dea20bc16153eb5d2a4082fdf166cdfc6d2fa9013b859a1a08a48f9474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ebbe27095330922f6595c99f71c3904422f67d30851542080ed51216e0a2c3\",\"dweb:/ipfs/QmZKv7MvvVUaAZDTeE7TdxEdgEYWXZMF8HBjXbVm9iPW1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "GobinGelt.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GobinGelt.sol": {
				"ast": {
					"absolutePath": "GobinGelt.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"GoblinGelt": [
							962
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						]
					},
					"id": 963,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "176:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "204:73:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "289:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "303:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "478:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "487:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "509:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "537:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "529:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:57:0"
									},
									"src": "472:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "552:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "715:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "740:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "724:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "763:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "747:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "780:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "772:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:63:0"
									},
									"src": "709:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "795:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "877:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "914:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:9:0"
									},
									"scope": 77,
									"src": "868:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "931:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1019:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1037:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1029:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:9:0"
									},
									"scope": 77,
									"src": "1010:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1086:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1337:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1329:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:6:0"
									},
									"scope": 77,
									"src": "1311:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1388:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1673:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1706:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1698:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:9:0"
									},
									"scope": 77,
									"src": "1664:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1755:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2451:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2484:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2476:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2509:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:6:0"
									},
									"scope": 77,
									"src": "2442:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2523:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2843:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2864:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2878:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2870:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2890:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2882:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2915:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2915:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:6:0"
									},
									"scope": 77,
									"src": "2834:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 963,
							"src": "279:2645:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "3109:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3258:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3258:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3258:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3139:89:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3240:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3272:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3343:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3373:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3373:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3372:15:0"
									},
									"scope": 100,
									"src": "3334:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3396:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3469:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3501:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3501:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:0"
									},
									"scope": 100,
									"src": "3460:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3524:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3606:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3614:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3640:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3639:7:0"
									},
									"scope": 100,
									"src": "3597:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 963,
							"src": "3230:420:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "3787:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3815:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4340:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4417:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4435:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4439:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4435:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4428:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4364:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4374:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4408:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:9:0"
									},
									"scope": 129,
									"src": "4355:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4528:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4546:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4550:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4546:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4539:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4470:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4478:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4512:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4511:16:0"
									},
									"scope": 129,
									"src": "4461:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4642:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4660:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4653:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4579:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4599:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4633:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4632:9:0"
									},
									"scope": 129,
									"src": "4570:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 963,
							"src": "4322:350:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "4831:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4859:144:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "5015:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5035:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5361:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5394:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5386:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5410:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:49:0"
									},
									"src": "5355:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5443:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5610:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5637:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5629:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:16:0"
									},
									"src": "5604:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5653:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5827:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5856:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5848:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5847:18:0"
									},
									"src": "5821:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5874:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6236:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6271:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6263:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6288:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6280:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6307:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6262:52:0"
									},
									"src": "6230:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6323:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6512:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6541:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6533:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6532:18:0"
									},
									"src": "6506:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6559:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6769:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6797:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6788:17:0"
									},
									"src": "6763:43:0"
								}
							],
							"scope": 963,
							"src": "5005:1804:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6813:146:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6992:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7227:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7245:15:0"
									},
									"src": "7221:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7269:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7416:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7447:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7439:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7438:17:0"
									},
									"src": "7410:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7464:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7770:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7799:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7791:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7815:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7807:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7832:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7824:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7790:48:0"
									},
									"src": "7764:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7847:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "8014:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8042:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "8034:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8033:16:0"
									},
									"src": "8008:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "8058:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "8232:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8262:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8254:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8253:18:0"
									},
									"src": "8226:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8280:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8543:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8596:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8569:35:0"
									},
									"src": "8537:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8613:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8802:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8832:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8824:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8823:18:0"
									},
									"src": "8796:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8850:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "9062:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9092:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "9084:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9083:18:0"
									},
									"src": "9056:46:0"
								}
							],
							"scope": 963,
							"src": "6961:2144:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "9109:148:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "9269:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9291:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9670:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9705:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9697:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9721:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9713:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9738:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9730:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9754:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9696:66:0"
									},
									"src": "9664:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9771:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9938:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9958:16:0"
									},
									"src": "9932:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9983:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "10157:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10188:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "10180:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10179:18:0"
									},
									"src": "10151:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "10206:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10478:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10515:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10507:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10506:33:0"
									},
									"src": "10472:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10548:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10737:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10759:18:0"
									},
									"src": "10731:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10786:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10998:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11029:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "11021:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11020:18:0"
									},
									"src": "10992:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "11047:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11344:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11378:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11370:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11397:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11389:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11369:41:0"
									},
									"src": "11338:73:0"
								}
							],
							"scope": 963,
							"src": "9259:2155:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "11559:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12398:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12398:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12398:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12407:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12407:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12407:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12415:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12415:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12415:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12431:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12431:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12431:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11595:774:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12389:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12451:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12467:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12459:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12451:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12585:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12513:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12529:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12521:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12513:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12556:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12548:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12540:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12567:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12621:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12605:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12605:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12657:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12642:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12642:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12684:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12669:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12669:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12938:60:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12949:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12957:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12949:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12949:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12973:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12973:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12700:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12894:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12894:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12929:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12915:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12893:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12938:0:0"
									},
									"scope": 771,
									"src": "12882:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "13128:31:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13146:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13139:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "13006:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "13077:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13081:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "13113:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13113:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13112:15:0"
									},
									"scope": 771,
									"src": "13068:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13340:33:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13351:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13167:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13287:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13293:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13325:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13324:15:0"
									},
									"scope": 771,
									"src": "13278:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "14077:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14095:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "14088:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13381:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "14030:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14038:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "14070:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14069:7:0"
									},
									"scope": 771,
									"src": "14021:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14231:38:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14249:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14242:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "14113:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14179:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14190:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14222:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14221:9:0"
									},
									"scope": 771,
									"src": "14170:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14406:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14424:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14424:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14417:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14277:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14341:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14350:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14396:9:0"
									},
									"scope": 771,
									"src": "14332:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14730:107:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14749:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14741:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14741:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14757:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14757:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14741:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14790:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14797:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14801:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14780:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14780:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14780:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14818:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14458:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14664:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14681:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14673:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14693:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14685:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14672:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14724:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14723:6:0"
									},
									"scope": 771,
									"src": "14655:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14989:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "15007:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "15019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15007:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "15026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15007:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "15000:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14845:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14909:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14942:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14934:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14918:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14980:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14979:9:0"
									},
									"scope": 771,
									"src": "14900:142:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15440:111:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15459:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15451:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15451:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15467:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15467:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15451:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15499:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15490:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15490:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15490:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15532:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "15050:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15370:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15386:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15378:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15403:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15395:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15377:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15433:6:0"
									},
									"scope": 771,
									"src": "15361:190:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "16254:156:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16273:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16265:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16265:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16283:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16283:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16265:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16322:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16337:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16306:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16306:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16306:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16370:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16374:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16354:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16354:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16354:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16391:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15559:596:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16170:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16191:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16183:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16205:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16197:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16217:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16209:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16182:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16248:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16247:6:0"
									},
									"scope": 771,
									"src": "16161:249:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16864:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16879:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16895:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16887:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16887:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16879:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16875:88:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16899:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16948:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16940:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16940:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16940:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16921:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16921:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16914:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16977:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16991:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16983:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16983:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16983:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16977:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16973:88:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16995:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17046:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17038:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17038:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17038:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "17017:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17017:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "17010:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "17079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "17085:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "17089:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "17071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17071:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "17071:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16418:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16804:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16822:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16848:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16840:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16813:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16864:0:0"
									},
									"scope": 771,
									"src": "16795:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17502:1060:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17517:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17533:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17525:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17525:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17517:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17694:371:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17717:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17709:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17709:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17731:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17741:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17731:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17709:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17765:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17779:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17765:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17761:117:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17786:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17837:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17843:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17856:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17812:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17812:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17805:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17892:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18001:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "18011:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18001:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "18019:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "18033:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18019:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18001:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "18001:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17513:552:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17537:151:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17655:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17671:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17655:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17655:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "18081:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18087:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18087:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18081:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "18301:211:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18316:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18463:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18473:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18463:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18480:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18463:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18463:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "18077:435:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "18099:196:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "18114:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "18247:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18263:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18247:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "18247:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18544:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18548:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18529:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18529:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18524:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "17111:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17436:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17452:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17444:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17466:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17458:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17443:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17502:0:0"
									},
									"scope": 771,
									"src": "17427:1135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18971:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19005:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18997:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18997:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18997:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18986:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18982:93:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "19009:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19060:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19052:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19052:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19052:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "19031:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19031:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "19024:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19101:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19093:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19093:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19093:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "19105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "19114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19085:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "19085:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18570:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18924:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18947:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18929:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18971:0:0"
									},
									"scope": 771,
									"src": "18915:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19512:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19538:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19538:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19527:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19523:91:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19550:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19599:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19591:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19591:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19591:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19572:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19572:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19565:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19641:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19641:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19624:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19624:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "19136:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19465:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19479:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19471:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19496:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19488:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19470:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19512:0:0"
									},
									"scope": 771,
									"src": "19456:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "20294:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "20314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "20321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "20330:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20337:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "20305:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20305:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "20305:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19675:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20229:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20246:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "20238:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20261:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "20253:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "20270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20237:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20294:0:0"
									},
									"scope": 771,
									"src": "20220:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "21315:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "21330:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21339:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21339:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21330:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "21326:91:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "21351:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21402:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21394:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21394:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21394:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "21373:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21373:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "21366:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21442:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21442:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21431:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21427:92:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21454:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21504:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21496:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21496:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21496:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21476:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21476:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21469:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21529:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21541:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21529:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21529:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21559:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21529:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21529:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21579:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21575:78:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21590:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21619:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21626:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21635:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21610:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21610:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21605:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "20358:853:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21226:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21235:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21275:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "21287:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21282:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21282:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21234:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21315:0:0"
									},
									"scope": 771,
									"src": "21217:443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "22041:398:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "22060:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "22052:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "22089:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "22096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "22079:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22079:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22052:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "22119:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22144:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "22139:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22139:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "22153:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "22139:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22119:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "22115:317:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "22158:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "22177:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "22196:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22177:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "22173:132:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "22203:102:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "22256:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "22265:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "22283:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "22229:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22229:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "22222:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "22319:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "22357:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "22364:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "22373:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "22392:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22373:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22399:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "22348:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22348:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "22348:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21668:278:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21961:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21992:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22017:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "22009:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21976:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22041:0:0"
									},
									"scope": 771,
									"src": "21952:487:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 963,
							"src": "12371:10071:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "22581:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"23140:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "23140:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "23140:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "22611:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "23129:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23171:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "23155:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23155:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "23186:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "23285:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "23312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23311:17:0"
									},
									"src": "23279:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "23337:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23433:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23461:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "23453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23452:15:0"
									},
									"src": "23427:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "23482:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23519:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23503:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23550:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23534:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23502:57:0"
									},
									"src": "23476:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23725:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23740:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23764:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23756:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23756:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23756:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23740:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23736:97:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23768:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23818:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23810:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23810:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23810:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23790:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23790:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23783:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23862:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23843:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23843:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23843:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "23568:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23711:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23703:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23702:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23725:0:0"
									},
									"scope": 916,
									"src": "23691:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23997:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "24008:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24008:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "24008:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "24032:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23891:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23985:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23994:2:0"
									},
									"src": "23976:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "24177:32:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24195:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "24188:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "24049:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "24131:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24136:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "24168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24167:9:0"
									},
									"scope": 916,
									"src": "24122:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "24332:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "24347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24347:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "24358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24358:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24347:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "24343:103:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "24372:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "24421:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24421:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "24394:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24394:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "24387:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "24217:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "24296:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24307:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24332:0:0"
									},
									"scope": 916,
									"src": "24287:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24851:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24889:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24881:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24881:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24881:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24862:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24862:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24862:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "24461:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24841:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24841:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24841:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24806:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24823:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24851:0:0"
									},
									"scope": 916,
									"src": "24797:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "25125:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "25140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25152:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25152:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25140:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "25136:93:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "25164:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25214:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25206:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25206:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25206:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "25186:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25186:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "25179:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "25258:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "25239:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25239:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "25239:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24908:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"25115:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "25115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25115:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "25064:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25090:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "25082:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25081:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25125:0:0"
									},
									"scope": 916,
									"src": "25055:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "25498:128:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25517:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "25509:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25509:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "25528:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25509:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "25545:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "25554:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25545:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "25545:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "25599:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "25609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "25578:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25578:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "25573:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "25283:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25444:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25471:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "25463:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25462:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25498:0:0"
									},
									"scope": 916,
									"src": "25435:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 963,
							"src": "23111:2518:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "25712:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 919,
										"name": "ERC20",
										"nameLocations": [
											"25819:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "25819:5:0"
									},
									"id": 920,
									"nodeType": "InheritanceSpecifier",
									"src": "25819:5:0"
								},
								{
									"baseName": {
										"id": 921,
										"name": "Ownable",
										"nameLocations": [
											"25826:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "25826:7:0"
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "25826:7:0"
								}
							],
							"canonicalName": "GoblinGelt",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "25744:52:0",
								"text": "@custom:security-contact risson@goblingelt.com"
							},
							"fullyImplemented": true,
							"id": 962,
							"linearizedBaseContracts": [
								962,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "GoblinGelt",
							"nameLocation": "25805:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "25949:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 935,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "25966:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25970:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25966:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3231303030303030",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25978:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_21000000_by_1",
																	"typeString": "int_const 21000000"
																},
																"value": "21000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25989:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 939,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "25995:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25995:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "25989:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25978:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25960:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25960:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "25960:46:0"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "476f626c696e2047656c74",
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25890:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_acab61f97ab98ea2a122a27ac85c922a58c52d8967e93c8808d073375e1889c2",
														"typeString": "literal_string \"Goblin Gelt\""
													},
													"value": "Goblin Gelt"
												},
												{
													"hexValue": "47454c54",
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25905:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_878a953dfc5cc7615b4b57b5ca8aaab2799e44629fec87de046a429a12be0297",
														"typeString": "literal_string \"GELT\""
													},
													"value": "GELT"
												}
											],
											"id": 929,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 926,
												"name": "ERC20",
												"nameLocations": [
													"25884:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "25884:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25884:28:0"
										},
										{
											"arguments": [
												{
													"id": 931,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 924,
													"src": "25930:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 932,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 930,
												"name": "Ownable",
												"nameLocations": [
													"25922:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "25922:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25922:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "25861:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "25853:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25852:22:0"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25949:0:0"
									},
									"scope": 962,
									"src": "25841:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "26081:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "26098:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "26102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 955,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26092:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26092:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "26092:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 953,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 952,
												"name": "onlyOwner",
												"nameLocations": [
													"26071:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "26071:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26071:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "26031:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26044:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "26036:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26056:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "26048:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26035:28:0"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26081:0:0"
									},
									"scope": 962,
									"src": "26022:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 963,
							"src": "25796:324:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793
							]
						}
					],
					"src": "176:25946:0"
				},
				"id": 0
			}
		}
	}
}